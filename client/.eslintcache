[{"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\index.js":"1","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Careers\\Careers.jsx":"2","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\errorHandler.js":"3","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\common\\TheHeader.jsx":"4","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\KoboCare\\UZICare.js":"5","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\App.js":"6","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\api.js":"7","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\Slider.js":"8","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Autocomplete.jsx":"9","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\About\\About.js":"10","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Home\\Home.js":"11","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\TradeIn\\TradeIn.jsx":"12","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Map.js":"13","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Pricing.jsx":"14","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\reportWebVitals.js":"15","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\common\\Footer.js":"16","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\Loading.js":"17","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\tracking.js":"18","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\formatNumber.js":"19","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Careers\\Accordion.jsx":"20","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\SEO.js":"21"},{"size":519,"mtime":1609451335746,"results":"22","hashOfConfig":"23"},{"size":37206,"mtime":1615470875181,"results":"24","hashOfConfig":"23"},{"size":828,"mtime":1615641856586,"results":"25","hashOfConfig":"23"},{"size":19301,"mtime":1614948147305,"results":"26","hashOfConfig":"23"},{"size":15978,"mtime":1615767605731,"results":"27","hashOfConfig":"23"},{"size":4154,"mtime":1614947590233,"results":"28","hashOfConfig":"23"},{"size":2369,"mtime":1615472270234,"results":"29","hashOfConfig":"23"},{"size":3011,"mtime":1615644297033,"results":"30","hashOfConfig":"23"},{"size":6089,"mtime":1615847814964,"results":"31","hashOfConfig":"23"},{"size":13225,"mtime":1614683943864,"results":"32","hashOfConfig":"23"},{"size":16918,"mtime":1615829131097,"results":"33","hashOfConfig":"23"},{"size":12101,"mtime":1615846346954,"results":"34","hashOfConfig":"23"},{"size":4075,"mtime":1615665706234,"results":"35","hashOfConfig":"23"},{"size":18840,"mtime":1615843777481,"results":"36","hashOfConfig":"23"},{"size":362,"mtime":1607695544000,"results":"37","hashOfConfig":"23"},{"size":6882,"mtime":1615401086301,"results":"38","hashOfConfig":"23"},{"size":379,"mtime":1609422020947,"results":"39","hashOfConfig":"23"},{"size":706,"mtime":1608220448000,"results":"40","hashOfConfig":"23"},{"size":249,"mtime":1607961708000,"results":"41","hashOfConfig":"23"},{"size":1210,"mtime":1615401815655,"results":"42","hashOfConfig":"23"},{"size":2656,"mtime":1614694347395,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"uype26",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\index.js",[],["94","95"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Careers\\Careers.jsx",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\errorHandler.js",[],["96","97"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\common\\TheHeader.jsx",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\KoboCare\\UZICare.js",["98","99","100"],"import React, { useEffect, useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport TheHeader from \"../common/TheHeader\";\nimport tyres from \"../../images/tyres.png\";\nimport diesel from \"../../images/diesel.png\";\nimport oil from \"../../images/oil.png\";\nimport Footer from \"../common/Footer\";\nimport logocolored from \"../../images/logo.png\";\nimport { httpGetNoToken, httpPostNoToken } from \"../helpers/api\";\nimport ReactPhoneInput from \"react-phone-input-2\";\nimport Loader from \"../helpers/Loader\";\nimport Swal from \"sweetalert2\";\nimport { handleError } from \"../helpers/errorHandler\";\nimport axios from \"axios\";\nimport SEO from \"../SEO\";\nimport { Event } from \"../helpers/tracking\";\n// import { useParams } from \"react-router-dom\";\n\nconst KoboCare = () => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  });\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}route/country`).then((res) => {\n      setCountry(res.data.data.countries);\n    });\n  }, []);\n\n  const [show, setShow] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  let [mobile, setMobile] = useState(\"\");\n  let [country, setCountry] = useState(\"\");\n  const [inputValues, setInputValues] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    secret: \"\",\n    mobile: \"\",\n    location: \"\",\n    country: \"\",\n    user_type: \"uzi_care\",\n    // user_type: \"customer\",\n  });\n  // const { lang } = useParams();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setInputValues({ ...inputValues, [name]: value });\n  };\n\n  const register = async (e) => {\n    try {\n      e.preventDefault();\n      setSubmitting(true);\n      const data = {\n        first_name: inputValues.first_name,\n        last_name: inputValues.last_name,\n        email: inputValues.email,\n        password: inputValues.secret,\n        // phone_number: inputValues.mobile,\n        phone_number:\n          mobile.charAt(4) === \"0\"\n            ? (mobile = mobile.replace(mobile.charAt(4), \"\"))\n            : mobile,\n        location: inputValues.location,\n        country: inputValues.country,\n        type: inputValues.user_type,\n      };\n      const response = await httpPostNoToken(\"create_user\", data);\n      Swal.fire({\n        title: \"Successful ðŸ˜€\",\n        text: \"Your details have been submitted. We will get in touch shortly\",\n        type: \"success\",\n      });\n      Event(\n        \"UZI Logistics & Trucking\",\n        \"Registering for UZI Logistics\",\n        \"UZI Logistics registration successful\"\n      );\n      console.log(data);\n      console.log(response);\n      setSubmitting(false);\n      closeModal();\n      clearForm();\n    } catch (error) {\n      // handleError(error);\n      // const text = error.response.data\n      //   ? error.response.data.data.error.message\n      //   : error.response.data.message;\n      Swal.fire({\n        title: \"Sorry ðŸ˜ž\",\n        text: error.message,\n        type: \"error\",\n      });\n      setSubmitting(false);\n      clearForm();\n    }\n  };\n\n  const clearForm = () => {\n    setInputValues({\n      ...inputValues,\n      secret: \"\",\n      first_name: \"\",\n      user_type: \"\",\n      last_name: \"\",\n      country: \"\",\n      location: \"\",\n      email: \"\",\n      mobile: \"\",\n      phone: \"\"\n    });\n  };\n\n  const showModal = () => {\n    setSubmitting(true);\n    setShow(!show);\n    setSubmitting(false);\n  };\n  const handleOnChange = (value, data) => {\n    console.log(data);\n    setMobile(value);\n  };\n\n  const closeModal = () => {\n    setSubmitting(true);\n    setShow(!show);\n    setInputValues({\n      ...inputValues,\n      secret: \"\",\n      country: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      location: \"\",\n      email: \"\",\n      mobile: \"\",\n      user_type: \"\",\n    });\n    setSubmitting(false);\n    setMobile(\"\");\n  };\n\n  return (\n    <>\n      <SEO title=\"UZI-LOGISTICS-&-TRUCKING CARE | UZICare\" />\n      <div className=\"overflow-head\">\n        <TheHeader\n          bgColor=\"orange-header\"\n          kobo={logocolored}\n          color=\"black\"\n          sticky=\"sticky\"\n        />\n        {show && (\n          <div className=\"modal\">\n            <div className=\"register-box light-orange\">\n              <i\n                className=\"material-icons pointer green-x\"\n                onClick={closeModal}\n              >\n                {\" \"}\n                close\n              </i>\n              <form className=\"contact-box__images\" onSubmit={register}>\n                <p className=\"margin-bottom-1 bold\">\n                  <FormattedMessage\n                    id=\"app.signupkobocare\"\n                    defaultMessage=\"Sign up for UZICare\"\n                  />\n                </p>\n                <div className=\"grid-input input-text\">\n                  <div className=\"flex-column\">\n                    <label\n                      htmlFor=\"model\"\n                      className=\"input-text font-smaller\"\n                      data-aos=\"zoom-in\"\n                    >\n                      {\" \"}\n                      <FormattedMessage\n                        id=\"app.first-name\"\n                        defaultMessage=\"Firstname\"\n                      />\n                    </label>\n\n                    <input\n                      data-aos=\"zoom-in\"\n                      type=\"text\"\n                      placeholder=\"\"\n                      onChange={handleChange}\n                      name=\"first_name\"\n                      value={inputValues.first_name}\n                      required\n                    />\n                  </div>\n                  <div className=\"flex-column\">\n                    <label htmlFor=\"model\" className=\"input-text font-smaller\">\n                      <FormattedMessage\n                        id=\"app.last-name\"\n                        defaultMessage=\"Lastname\"\n                      />\n                    </label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"last_name\"\n                      value={inputValues.last_name}\n                      required\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"grid-input\">\n                  <div className=\"flex-column\">\n                    <label htmlFor=\"model\" className=\"input-text font-smaller\">\n                      <FormattedMessage\n                        id=\"app.email\"\n                        defaultMessage=\"Email address\"\n                      />\n                    </label>\n\n                    <input\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"email\"\n                      value={inputValues.email}\n                      required\n                      onChange={handleChange}\n                    />\n                  </div>\n                  <div className=\"flex-column\">\n                    <label\n                      htmlFor=\"model\"\n                      className=\"input-text font-smaller margin-label\"\n                    >\n                      {/* <FormattedMessage\n                        id=\"app.phone-number\"\n                        defaultMessage=\"Phone number\"\n                      /> */}\n                    </label>\n                    <ReactPhoneInput\n                      dropdownClass=\"\"\n                      inputClass=\"\"\n                      preferredCountries={[\"ng\", \"gh\"]}\n                      value={mobile}\n                      // defaultCountry={localStorage.code.toLowerCase() || \"ng\"}\n                      country=\"ng\"\n                      onChange={handleOnChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"flex flex-column bottom-padding-20\">\n                  <label className=\"label-color font-smaller\">\n                    <FormattedMessage\n                      id=\"app.password\"\n                      defaultMessage=\"Password\"\n                    />\n                  </label>\n                  <input\n                    type=\"password\"\n                    placeholder=\"\"\n                    name=\"secret\"\n                    autocomplete\n                    value={inputValues.secret}\n                    required\n                    onChange={handleChange}\n                  />\n                </div>\n                <div className=\"grid-input\">\n                  <div className=\"flex-column\">\n                    <label htmlFor=\"model\" className=\"input-text font-smaller\">\n                      <FormattedMessage\n                        id=\"app.country\"\n                        defaultMessage=\"Country\"\n                      />\n                    </label>\n\n                    <select\n                      type=\"text\"\n                      className=\"select-box\"\n                      name=\"country\"\n                      value={inputValues.country}\n                      required\n                      onChange={handleChange}\n                    >\n                      <option className=\"close\">Select Country</option>\n                      <option value=\"ng\">Nigeria</option>\n                      <option value=\"gh\">Ghana</option>\n                      {/* {country\n                       ? country.map((countries) => (\n                            <option value={countries.country}>\n                             {countries.country.toUpperCase()}\n                            </option>\n                          ))\n                         : \"\"} */}\n                    </select>\n                  </div>\n\n                  {/* <div className=\"flex-column\">\n                    <label htmlFor=\"model\" className=\"input-text font-smaller\">\n                      <FormattedMessage\n                        id=\"app.user_type\"\n                        defaultMessage=\"User Type\"\n                      />\n                    </label>\n                    <select\n                      type=\"text\"\n                      className=\"select-box\"\n                      name=\"user_type\"\n                      value={inputValues.user_type}\n                      required\n                      onChange={handleChange}\n                    >\n                      <option className=\"close\">Select User</option>\n                      <option value=\"ng\">UZI CARE</option>\n                      <option value=\"gh\">CUSTOMER</option>\n                    </select>\n                  </div> */}\n\n                  <div className=\"flex-column\">\n                    <label htmlFor=\"model\" className=\"input-text font-smaller\">\n                      <FormattedMessage\n                        id=\"app.location\"\n                        defaultMessage=\"Location\"\n                      />\n                    </label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"location\"\n                      value={inputValues.location}\n                      required\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"contact-button\">\n                  <button type=\"submit\" className=\"register-button capitalize\">\n                    {submitting ? (\n                      <Loader />\n                    ) : (\n                      <FormattedMessage\n                        id=\"app.signup\"\n                        defaultMessage=\"SIGN UP\"\n                      />\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n        <div className=\"care\">\n          <div className=\"care-heading middle\">\n            <h1 className=\"capitalize\" data-aos=\"zoom-out\">\n              UZI LOGISTICS & TRUCKING\n            </h1>\n            <p data-aos=\"zoom-out\">\n              <FormattedMessage\n                id=\"app.kobocare-caption\"\n                defaultMessage=\"Get products at discounted rates.\"\n              />\n            </p>\n            <p data-aos=\"zoom-in\">\n              {\" \"}\n              <FormattedMessage\n                id=\"app.get-prod-text\"\n                defaultMessage=\"UZICare is a solution for registered drivers on the UZI Logistics Platform, as part of our commitment to drivers.\"\n              />\n            </p>\n          </div>\n        </div>\n        <div className=\"flex care-box\">\n          <p className=\"care-box__card\" data-aos=\"zoom-out\">\n            <FormattedMessage\n              id=\"app.kobo-care-text\"\n              defaultMessage=\"UZICare is a solution for registered drivers on the Kobo Platform, as part of our commitment to drivers.\"\n            />\n\n            <ul className=\"margin-1 margin-left-1 \">\n              <li className=\"padding-1 list-care\">\n                <FormattedMessage\n                  id=\"app.about-list-1\"\n                  defaultMessage=\"Discounted Diesel sale to UZI Drivers in partnership with Oando/MRS filling stations nationwide.\"\n                />\n              </li>\n              <li className=\"padding-1 list-care\" data-aos=\"zoom-out\">\n                <FormattedMessage\n                  id=\"app.about-list-2\"\n                  defaultMessage=\"Access to Diver Support Centers across Nigeria with services like filling stations maintenance bay, fire services, law enforcements dedicated parking, rest bay for drivers etc.\"\n                />\n              </li>\n              <li className=\"padding-1 list-care\" data-aos=\"zoom-in\">\n                <FormattedMessage\n                  id=\"app.about-list-3\"\n                  defaultMessage=\"Integrated HMO plan on UZI Care for drivers and their families.\"\n                />\n              </li>\n            </ul>\n            <button\n              className=\"care-button middle\"\n              data-aos=\"zoom-in\"\n              onClick={showModal}\n              // onClick={() => window.open(\"https://care.kobo360.com\")}\n            >\n              <FormattedMessage id=\"app.started\" defaultMessage=\"Get started\" />\n            </button>\n          </p>\n          <div className=\"flex-column kobocare-images\" data-aos=\"zoom-in\">\n            <div className=\"care-box__images flex-align-center hover-scale margin-1\">\n              <img src={tyres} alt=\"\" className=\"tyre\" loading=\"lazy\" />\n              <span data-aos=\"zoom-out\">\n                <p>\n                  <FormattedMessage id=\"app.tyres\" defaultMessage=\"Tyres\" />\n                </p>\n                <h1>+20% off</h1>\n              </span>\n            </div>\n            <div className=\"care-box__images margin-left-5 flex-align-center hover-scale margin-1\">\n              <img src={diesel} alt=\"\" loading=\"lazy\" />\n              <span>\n                <p>\n                  <FormattedMessage id=\"app.diesel\" defaultMessage=\"Diesel\" />{\" \"}\n                </p>\n                <h1>+30% off</h1>\n              </span>\n            </div>\n            <div className=\"care-box__images flex-align-center hover-scale margin-1\">\n              <img src={oil} alt=\"\" loading=\"lazy\" />\n              <span>\n                <p>\n                  <FormattedMessage\n                    id=\"app.engine-oil\"\n                    defaultMessage=\"Engine oil\"\n                  />\n                </p>\n                <h1>+15% off</h1>\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"partners \">\n          <h1 className=\"center title\" data-aos=\"zoom-in\">\n            <FormattedMessage\n              id=\"app.partner-with\"\n              defaultMessage=\"Our Partners\"\n            />\n          </h1>\n          <div className=\"partners-images\" data-aos=\"zoom-out\">\n            {/* <img className=\"big\" src={oando} alt=\"\" loading=\"lazy\" />\n            <img className=\"small-icon\" src={total} alt=\"\" loading=\"lazy\" />\n            <img className=\"small-icon\" src={danco} alt=\"\" loading=\"lazy\" /> */}\n          </div>\n        </div>\n        <Footer />\n      </div>\n    </>\n  );\n};\nexport default KoboCare;\n","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\App.js",[],["101","102"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\api.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\Slider.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Autocomplete.jsx",["103","104","105","106","107","108","109"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\About\\About.js",[],["110","111"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\TradeIn\\TradeIn.jsx",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Map.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Pricing.jsx",["112","113","114","115","116"],"import React, { useState, useEffect, useRef } from \"react\";\nimport Footer from \"../common/Footer\";\nimport sync from \"../../images/synchronize-arrows-1.svg\";\nimport Swal from \"sweetalert2\";\nimport { POST, httpGetNoToken } from \".././helpers/api\";\nimport TheHeader from \"../common/TheHeader\";\nimport logocolored from \"../../images/logo.png\";\nimport { FormattedMessage } from \"react-intl\";\nimport Loader from \"../helpers/Loader\";\nimport Autocomplete from \"./Autocomplete\";\nimport iosstore from \"../../images/app-store-logo@2x.png\";\nimport googlestore from \"../../images/en_badge_web_generic@2x.png\";\nimport MapContainer from \"./Map\";\nimport SEO from \"../SEO\";\nimport { Event } from \"../helpers/tracking\";\n// import { Helmet } from \"react-helmet\";\n//PRICING PAGE\n\n//TODO: Remove pricing from being restricted to only NG.\nclass Pricing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sourceAddress: \"\",\n      destinationAddress: \"\",\n      destinationState: \"\",\n      pickupState: \"\",\n      source: {},\n      destination: {},\n      center: {},\n      info: \"\",\n      isOpen: false,\n      estimate: {},\n      loading: false,\n      costPrice: \"\",\n      // maxPrice: \"\",\n      tonnage: \"\",\n      truckType: \"\",\n      country: \"Nigeria\",\n    };\n\n    this.pickupAddress = React.createRef();\n    this.destinationAddress = React.createRef();\n    this.autocomplete = null;\n    this.autocomplete_ = null;\n  }\n\n  componentDidMount() {\n    // document.title = \"Kobo360 | Pricing\";\n    window.scrollTo(0, 0);\n  }\n  setRef = (input) => {\n    this.pickupAddress = input;\n    this.autocomplete = new window.google.maps.places.Autocomplete(\n      this.pickupAddress\n    );\n    this.autocomplete.setComponentRestrictions({\n      country: [\"ng\"],\n    });\n    // Fire Event when a name is selected\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceSelect);\n  };\n\n  _setRef = (input) => {\n    this.destinationAddress = input;\n\n    //needed to get the place().\n    this.autocomplete_ = new window.google.maps.places.Autocomplete(\n      this.destinationAddress\n    );\n    this.autocomplete_.setComponentRestrictions({\n      country: [\"ng\"],\n    });\n    this.autocomplete_.addListener(\"place_changed\", this._handlePlaceSelect);\n  };\n\n  handlePlaceSelect = (e) => {\n    let addressObject = this.autocomplete.getPlace();\n    if (addressObject !== undefined) {\n      let sourceLat = addressObject.geometry\n        ? addressObject.geometry.location.lat()\n        : null;\n      let sourceLng = addressObject.geometry\n        ? addressObject.geometry.location.lng()\n        : null;\n      this.setState((prevState) => ({\n        ...prevState,\n        source: { lat: sourceLat, lng: sourceLng },\n        center: { lat: sourceLat, lng: sourceLng },\n        sourceAddress: addressObject && addressObject.formatted_address,\n      }));\n    }\n  };\n\n  // Extract City From Address Object\n  _handlePlaceSelect = (e) => {\n    let addressObject = this.autocomplete_.getPlace();\n\n    if (addressObject !== undefined) {\n      let destLat = addressObject.geometry.location.lat();\n      let destLng = addressObject.geometry.location.lng();\n      this.setState((prevState) => ({\n        ...prevState,\n        destination: { lat: destLat, lng: destLng },\n        center: { lat: destLat, lng: destLng },\n        destinationAddress: addressObject && addressObject.formatted_address,\n      }));\n    }\n  };\n\n  //format numbers\n  formatPrice = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  resetEstimator = (e) => {\n    e.preventDefault();\n    window.location.reload();\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  toPlayStore = () => {\n    window.open(\n      \"https://play.google.com/store/apps/details?id=io.kobodriver.kobodriver\"\n    );\n  };\n\n  toAppleStore = () => {\n    window.open(\"https://apps.apple.com/gh/app/kobo-customer/id1476414044\");\n  };\n\n  onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      this.setState({ loading: true });\n      const {\n        sourceAddress,\n        destinationAddress,\n        tonnage,\n        truckType,\n        country,\n      } = this.state;\n      const data = {\n        cargo_tonnes: tonnage,\n        country,\n        type: truckType,\n      };\n\n      let res = await httpGetNoToken(\"get_truck_types\");\n\n      this.setState({ estimate: res.data.data, loading: false });\n      this.setState({ costPrice: res.data });\n      console.log(res)\n      Event(\n        \"Pricing\",\n        `Getting Price for ${sourceAddress} to ${destinationAddress} for tonnage ${tonnage}`,\n        \"Success getting price\"\n      );\n    } catch (error) {\n      this.setState({ loading: false });\n      const msg =\n        typeof error !== \"object\"\n          ? error.response.data.message\n          : \"The address you provided isn't available. Please choose from the selected address\";\n\n            Swal.fire({\n              title: \"Sorry ðŸ˜ž\",\n              text: msg,\n              type: \"error\",\n            });\n    }\n  };\n\n  // onSubmit = (e) => {\n  //   e.preventDefault();\n  //   this.setState({ loading: true });\n  //   const { sourceAddress, destinationAddress, tonnage, country } = this.state;\n  //   const data = {\n  //     source: sourceAddress,\n  //     destination: destinationAddress,\n  //     tonnage: tonnage,\n  //     country,\n  //   };\n\n  //   POST(\"estimator/breakdown\", data)\n  //     .then((res) => {\n  //       this.setState({ estimate: res.data.data, loading: false });\n  //       // this.setState({ minPrice: res.data.data.min });\n  //       this.setState({ maxPrice: res.data.data.max });\n  //   Event(\n  //     \"Pricing\",\n  //     `Getting Price for ${sourceAddress} to ${destinationAddress} for tonnage ${tonnage}`,\n  //     \"Success getting price\"\n  //   );\n  // })\n  //     .catch((error) => {\n  //       this.setState({ loading: false });\n  //       const msg =\n  //         typeof error !== \"object\"\n  //           ? error.response.data.message\n  //           : \"The address you entered is not available. Please, choose from the suggested address\";\n\n  //       Swal.fire({\n  //         title: \"Sorry ðŸ˜ž\",\n  //         text: msg,\n  //         type: \"error\",\n  //       });\n  //       Event(\n  //         \"Pricing\",\n  //         `Getting Price for ${sourceAddress} to ${destinationAddress} for tonnage ${tonnage}`,\n  //         \"Error getting price\"\n  //       );\n  //     });\n  // };\n\n  render() {\n    return (\n      <>\n        <SEO title=\"UZI Logistics_&_Trucking | Pricing\" />\n        <div>\n          <TheHeader\n            bgColor=\"light-blue\"\n            kobo={logocolored}\n            color=\"black\"\n            sticky=\"sticky\"\n          />\n          <div className=\"pricing\">\n            <div className=\"estimator-heading middle\">\n              <h1 className=\"estimator\" data-aos=\"zoom-out\">\n                <FormattedMessage\n                  id=\"app.estimator-title\"\n                  defaultMessage=\"Price Estimator\"\n                />\n              </h1>\n            </div>\n            <p className=\"center\" data-aos=\"zoom-in\">\n              <FormattedMessage\n                id=\"app.estimator-text\"\n                defaultMessage=\"How much does UZI Logistics cost in your city? Calculate a fare estimate for\n                your next trip.\"\n              />\n              <br />\n              <FormattedMessage\n                id=\"app.estimator-text\"\n                defaultMessage=\"Simply enter a pickup location and destination to get started.\"\n              />\n            </p>\n\n            <Autocomplete\n              setRef={this.setRef}\n              _setRef={this._setRef}\n              handlePlaceSelect={this.handlePlaceSelect}\n              _handlePlaceSelect={this._handlePlaceSelect}\n              state={this.state}\n              onSubmit={this.onSubmit}\n              setChange={this.onChange}\n              loading={this.state.loading}\n            >\n              <MapContainer\n                source={this.state.source}\n                dest={this.state.destination}\n                center={this.state.center}\n                sourceAddress={this.state.sourceAddress}\n                onChange={this.onChange}\n                tonnage={this.state.tonnage}\n                destAddress={this.state.destinationAddress}\n              />\n            </Autocomplete>\n          </div>\n          <div className=\"price grid trade-box\">\n            {this.state.costprice ? (\n              <div className=\"price-estimator\">\n                <p className=\"white\">\n                  {\" \"}\n                  <FormattedMessage\n                    id=\"app.estimator-range\"\n                    defaultMessage=\"The cost of the service is :\"\n                  />\n                </p>\n                <p className=\"bold white font-5\">\n                  {\" \"}\n                  {this.state.loading ? (\n                    <Loader />\n                  ) : this.state.costPrice ? (\n                    `NGN\n                ${this.formatPrice(\n                  Math.round(this.state.costPrice)\n                )} - ${this.formatPrice(Math.round(this.state.maxPrice))}`\n                  ) : (\n                    \"\"\n                  )}\n                </p>\n                <div\n                  className=\"flex-align-center white \"\n                  onClick={this.resetEstimator}\n                >\n                  <img\n                    src={sync}\n                    alt=\"sync\"\n                    className=\"pd-1 pointer rotate-90 \"\n                    loading=\"lazy\"\n                  />\n                  <p className=\"pointer white padding-1-top\">\n                    <FormattedMessage id=\"app.reset\" defaultMessage=\"Reset\" />\n                  </p>\n                </div>\n                <div className=\"download-app download\">\n                  <p className=\"capitalize white margin-bottom-1 right margin-top-2\">\n                    <FormattedMessage\n                      id=\"app.download\"\n                      defaultMessage=\"download our apps\"\n                    />\n                  </p>\n                  <div className=\"app-store\">\n                    <img\n                      src={iosstore}\n                      alt=\"app-store\"\n                      onClick={this.toAppleStore}\n                      className=\"pointer download-img\"\n                      loading=\"lazy\"\n                    />\n                    <img\n                      src={googlestore}\n                      alt=\"google-store\"\n                      onClick={this.toPlayStore}\n                      className=\"pointer\"\n                      loading=\"lazy\"\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <Footer />\n        </div>\n      </>\n    );\n  }\n}\nexport default Pricing;\n\n// const Pricing = ({\n//   // setRef,\n//   // _setRef,\n//   // state,\n//   // setChange,\n//   // onSubmit,\n//   // loading,\n//   handlePlaceSelect,\n//   _handlePlaceSelect,\n//   children,\n// }) => {\n//   const [sourceAddress, destinationAddress] = useState(\"\");\n//   const [destinationState, pickupState, pickupAddress, state] = useState(\"\");\n//   const [source, destination, center, estimate] = useState({});\n//   const [isOpen, loading] = useState(false);\n//   const [info, costPrice] = useState(\"\");\n//   const [submitting, setSubmitting] = useState(false);\n//   const [truck_types, setTruckTypes, tonnage] = useState([]);\n//   const [country] = useState([]);\n//   const [autocomplete, autocomplete_] = useState(\"\");\n\n//   useEffect(() => {\n//     setRef();\n//   });\n\n//   const _setRef = (input) => {\n//     destinationAddress = input;\n\n//     //needed to get the place().\n//     autocomplete_ = new window.google.maps.places.Autocomplete(\n//       destinationAddress\n//     );\n//     autocomplete_.setComponentRestrictions({\n//       country: [\"ng\"],\n//     });\n//     autocomplete_.addListener(\"place_changed\", _handlePlaceSelect);\n//   };\n\n//   pickupAddress = React.createRef();\n//   destinationAddress = React.createRef();\n//   autocomplete = null;\n//   autocomplete_ = null;\n\n//   // const handlePlaceSelect = (e) => {\n//   //   let addressObject = autocomplete.getPlace();\n//   //   if (addressObject !== undefined) {\n//   //     let sourceLat = addressObject.geometry\n//   //       ? addressObject.geometry.location.lat()\n//   //       : null;\n//   //     let sourceLng = addressObject.geometry\n//   //       ? addressObject.geometry.location.lng()\n//   //       : null;\n//   //     (prevState) => ({\n//   //       ...prevState,\n//   //       source: { lat: sourceLat, lng: sourceLng },\n//   //       center: { lat: sourceLat, lng: sourceLng },\n//   //       sourceAddress: addressObject && addressObject.formatted_address,\n//   //     });\n//   //   }\n//   // };\n\n//   const setRef = (input) => {\n//     pickupAddress = input;\n//     autocomplete = new window.google.maps.places.Autocomplete(pickupAddress);\n//     autocomplete.setComponentRestrictions({\n//       country: [\"ng\"],\n//     });\n//     // Fire Event when a name is selected\n//     autocomplete.addListener(\"place_changed\", this.handlePlaceSelect);\n//   };\n\n//   const [inputValues, setInputValues] = useState({\n//     tonnage: \"\",\n//     truckType: \"\",\n//   });\n\n//   const onChange = (e) => {\n//     const { name, value } = e.target;\n//     setInputValues({ ...inputValues, [name]: value });\n//   };\n\n//   const toPlayStore = () => {\n//     window.open(\n//       \"https://play.google.com/store/apps/details?id=io.kobodriver.kobodriver\"\n//     );\n//   };\n\n//   const toAppleStore = () => {\n//     window.open(\"https://apps.apple.com/gh/app/kobo-customer/id1476414044\");\n//   };\n\n//   const clearForm = () => {\n//     setInputValues({\n//       ...inputValues,\n//       truckType: \"\",\n//       tonnage: \"\",\n//     });\n//   };\n\n//   const resetEstimator = (e) => {\n//     e.preventDefault();\n//     window.location.reload();\n//   };\n\n//   const onSubmit = async (e) => {\n//     try {\n//       e.preventDefault();\n//       setSubmitting(true);\n//       const data = {\n//         ...inputValues,\n//       };\n//     } catch (error) {\n//       clearForm();\n//       setSubmitting(false);\n//       Swal.fire({\n//         title: \"Sorry ðŸ˜ž\",\n//         // text: msg,\n//         type: \"error\",\n//       });\n//       Event(\n//         \"Pricing\",\n//         `Getting Price for ${sourceAddress} to ${destinationAddress} for tonnage ${tonnage}`,\n//         \"Error getting price\"\n//       );\n//     }\n//   };\n\n//   return (\n//     <>\n//       <SEO title=\"UZI Logistics_&_Trucking | Pricing\" />\n//       <div>\n//         <TheHeader\n//           bgColor=\"light-blue\"\n//           kobo={logocolored}\n//           color=\"black\"\n//           sticky=\"sticky\"\n//         />\n//         <div className=\"pricing\">\n//           <div className=\"estimator-heading middle\">\n//             <h1 className=\"estimator\" data-aos=\"zoom-out\">\n//               <FormattedMessage\n//                 id=\"app.estimator-title\"\n//                 defaultMessage=\"Price Estimator\"\n//               />\n//             </h1>\n//           </div>\n//           <p className=\"center\" data-aos=\"zoom-in\">\n//             <FormattedMessage\n//               id=\"app.estimator-text\"\n//               defaultMessage=\"How much does UZI Logistics cost in your city? Calculate a fare estimate for\n//                 your next trip.\"\n//             />\n//             <br />\n//             <FormattedMessage\n//               id=\"app.estimator-text\"\n//               defaultMessage=\"Simply enter a pickup location and destination to get started.\"\n//             />\n//           </p>\n\n//           <Autocomplete\n//             setRef={setRef}\n//             _setRef={_setRef}\n//             handlePlaceSelect={handlePlaceSelect}\n//             _handlePlaceSelect={_handlePlaceSelect}\n//             // state={state}\n//             onSubmit={onSubmit}\n//             setChange={onChange}\n//             loading={loading}\n//           >\n//             <MapContainer\n//               source={source}\n//               dest={destination}\n//               center={center}\n//               sourceAddress={sourceAddress}\n//               onChange={onChange}\n//               tonnage={tonnage}\n//               destAddress={destinationAddress}\n//             />\n//           </Autocomplete>\n//         </div>\n//         <div className=\"price grid trade-box\">\n//           {costPrice ? (\n//             <div className=\"price-estimator\">\n//               <p className=\"white\">\n//                 {\" \"}\n//                 <FormattedMessage\n//                   id=\"app.estimator-range\"\n//                   defaultMessage=\"Estimated price range\"\n//                 />\n//               </p>\n//               <p className=\"bold white font-5\">\n//                 {\" \"}\n//                 {loading ? (\n//                   <Loader />\n//                 ) : costPrice ? (\n//                   `NGN\n//                 ${this.formatPrice(Math.round(costPrice))} - ${this.formatPrice(\n//                     Math.round(costPrice)\n//                   )}`\n//                 ) : (\n//                   \"\"\n//                 )}\n//               </p>\n//               <div\n//                 className=\"flex-align-center white \"\n//                 onClick={resetEstimator}\n//               >\n//                 <img\n//                   src={sync}\n//                   alt=\"sync\"\n//                   className=\"pd-1 pointer rotate-90 \"\n//                   loading=\"lazy\"\n//                 />\n//                 <p className=\"pointer white padding-1-top\">\n//                   <FormattedMessage id=\"app.reset\" defaultMessage=\"Reset\" />\n//                 </p>\n//               </div>\n//               <div className=\"download-app download\">\n//                 <p className=\"capitalize white margin-bottom-1 right margin-top-2\">\n//                   <FormattedMessage\n//                     id=\"app.download\"\n//                     defaultMessage=\"download our apps\"\n//                   />\n//                 </p>\n//                 <div className=\"app-store\">\n//                   <img\n//                     src={iosstore}\n//                     alt=\"app-store\"\n//                     onClick={toAppleStore}\n//                     className=\"pointer download-img\"\n//                     loading=\"lazy\"\n//                   />\n//                   <img\n//                     src={googlestore}\n//                     alt=\"google-store\"\n//                     onClick={toPlayStore}\n//                     className=\"pointer\"\n//                     loading=\"lazy\"\n//                   />\n//                 </div>\n//               </div>\n//             </div>\n//           ) : (\n//             <div></div>\n//           )}\n//         </div>\n//         <Footer />\n//       </div>\n//     </>\n//   );\n// };\n","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\reportWebVitals.js",[],["117","118"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\common\\Footer.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\Loading.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\tracking.js",[],["119","120"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\formatNumber.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Careers\\Accordion.jsx",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\SEO.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"121","replacedBy":"125"},{"ruleId":"123","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":9,"column":10,"nodeType":"129","messageId":"130","endLine":9,"endColumn":24},{"ruleId":"127","severity":1,"message":"131","line":13,"column":10,"nodeType":"129","messageId":"130","endLine":13,"endColumn":21},{"ruleId":"127","severity":1,"message":"132","line":33,"column":8,"nodeType":"129","messageId":"130","endLine":33,"endColumn":15},{"ruleId":"121","replacedBy":"133"},{"ruleId":"123","replacedBy":"134"},{"ruleId":"127","severity":1,"message":"135","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":13},{"ruleId":"127","severity":1,"message":"136","line":20,"column":10,"nodeType":"129","messageId":"130","endLine":20,"endColumn":16},{"ruleId":"127","severity":1,"message":"137","line":21,"column":10,"nodeType":"129","messageId":"130","endLine":21,"endColumn":15},{"ruleId":"127","severity":1,"message":"138","line":21,"column":17,"nodeType":"129","messageId":"130","endLine":21,"endColumn":25},{"ruleId":"127","severity":1,"message":"139","line":24,"column":10,"nodeType":"129","messageId":"130","endLine":24,"endColumn":22},{"ruleId":"127","severity":1,"message":"140","line":24,"column":24,"nodeType":"129","messageId":"130","endLine":24,"endColumn":39},{"ruleId":"141","severity":1,"message":"142","line":70,"column":6,"nodeType":"143","endLine":70,"endColumn":23,"suggestions":"144"},{"ruleId":"121","replacedBy":"145"},{"ruleId":"123","replacedBy":"146"},{"ruleId":"127","severity":1,"message":"147","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"148","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"149","line":1,"column":38,"nodeType":"129","messageId":"130","endLine":1,"endColumn":44},{"ruleId":"127","severity":1,"message":"150","line":5,"column":10,"nodeType":"129","messageId":"130","endLine":5,"endColumn":14},{"ruleId":"127","severity":1,"message":"151","line":145,"column":13,"nodeType":"129","messageId":"130","endLine":145,"endColumn":17},{"ruleId":"121","replacedBy":"152"},{"ruleId":"123","replacedBy":"153"},{"ruleId":"121","replacedBy":"154"},{"ruleId":"123","replacedBy":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],["156"],["157"],"no-unused-vars","'httpGetNoToken' is defined but never used.","Identifier","unusedVar","'handleError' is defined but never used.","'country' is assigned a value but never used.",["156"],["157"],"'axios' is defined but never used.","'trucks' is assigned a value but never used.","'sizes' is assigned a value but never used.","'setSizes' is assigned a value but never used.","'tonnageRange' is assigned a value but never used.","'setTonnageRange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTonnes'. Either include it or remove the dependency array.","ArrayExpression",["158"],["156"],["157"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'POST' is defined but never used.","'data' is assigned a value but never used.",["156"],["157"],["156"],["157"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},"Update the dependencies array to be: [getRef, _getRef, getTonnes]",{"range":"161","text":"162"},[1831,1848],"[getRef, _getRef, getTonnes]"]