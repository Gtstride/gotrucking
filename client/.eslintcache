[{"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\index.js":"1","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Careers\\Careers.jsx":"2","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\errorHandler.js":"3","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\common\\TheHeader.jsx":"4","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\KoboCare\\UZICare.js":"5","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\App.js":"6","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\api.js":"7","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\Slider.js":"8","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Autocomplete.jsx":"9","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\About\\About.js":"10","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Home\\Home.js":"11","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\TradeIn\\TradeIn.jsx":"12","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Map.js":"13","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Pricing.jsx":"14","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\reportWebVitals.js":"15","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\common\\Footer.js":"16","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\Loading.js":"17","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\tracking.js":"18","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\formatNumber.js":"19","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Careers\\Accordion.jsx":"20","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\SEO.js":"21","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Contact\\Contact.jsx":"22","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\helpers\\api.js":"23","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Careers\\Careers.jsx":"24","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\helpers\\Loader.js":"25","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Autocomplete.jsx":"26","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Pricing.jsx":"27","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\index.js":"28","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Home\\Home.js":"29","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Terms-Conditions\\Terms.jsx":"30","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\helpers\\errorHandler.js":"31","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\reportWebVitals.js":"32","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Terms-Conditions\\Privacy.jsx":"33","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Map.js":"34","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\TradeIn\\TradeIn.jsx":"35","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\common\\TheHeader.jsx":"36","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Services\\Services.jsx":"37","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\SEO.js":"38"},{"size":519,"mtime":1609451335746,"results":"39","hashOfConfig":"40"},{"size":37206,"mtime":1615470875181,"results":"41","hashOfConfig":"40"},{"size":828,"mtime":1615641856586,"results":"42","hashOfConfig":"40"},{"size":19301,"mtime":1614948147305,"results":"43","hashOfConfig":"40"},{"size":15978,"mtime":1615767605731,"results":"44","hashOfConfig":"40"},{"size":4154,"mtime":1614947590233,"results":"45","hashOfConfig":"40"},{"size":2369,"mtime":1615472270234,"results":"46","hashOfConfig":"40"},{"size":3011,"mtime":1615644297033,"results":"47","hashOfConfig":"40"},{"size":6089,"mtime":1615873688827,"results":"48","hashOfConfig":"40"},{"size":13225,"mtime":1614683943864,"results":"49","hashOfConfig":"40"},{"size":16918,"mtime":1615829131097,"results":"50","hashOfConfig":"40"},{"size":12101,"mtime":1615846346954,"results":"51","hashOfConfig":"40"},{"size":4084,"mtime":1615873873986,"results":"52","hashOfConfig":"40"},{"size":18879,"mtime":1615873350994,"results":"53","hashOfConfig":"40"},{"size":362,"mtime":1607695544000,"results":"54","hashOfConfig":"40"},{"size":6882,"mtime":1615401086301,"results":"55","hashOfConfig":"40"},{"size":379,"mtime":1609422020947,"results":"56","hashOfConfig":"40"},{"size":706,"mtime":1608220448000,"results":"57","hashOfConfig":"40"},{"size":249,"mtime":1607961708000,"results":"58","hashOfConfig":"40"},{"size":1210,"mtime":1615401815655,"results":"59","hashOfConfig":"40"},{"size":2656,"mtime":1614694347395,"results":"60","hashOfConfig":"40"},{"size":21537,"mtime":1615848883880,"results":"61","hashOfConfig":"40"},{"size":2369,"mtime":1615472270234,"results":"62","hashOfConfig":"63"},{"size":37206,"mtime":1615470875181,"results":"64","hashOfConfig":"63"},{"size":398,"mtime":1607709122000,"results":"65","hashOfConfig":"63"},{"size":5904,"mtime":1616146173425,"results":"66","hashOfConfig":"63"},{"size":12451,"mtime":1616151066759,"results":"67","hashOfConfig":"63"},{"size":519,"mtime":1609451335746,"results":"68","hashOfConfig":"63"},{"size":16918,"mtime":1615829131097,"results":"69","hashOfConfig":"63"},{"size":43380,"mtime":1609858324384,"results":"70","hashOfConfig":"63"},{"size":828,"mtime":1615641856586,"results":"71","hashOfConfig":"63"},{"size":362,"mtime":1607695544000,"results":"72","hashOfConfig":"63"},{"size":17760,"mtime":1609858024681,"results":"73","hashOfConfig":"63"},{"size":8842,"mtime":1616162023282,"results":"74","hashOfConfig":"63"},{"size":12101,"mtime":1615846346954,"results":"75","hashOfConfig":"63"},{"size":19301,"mtime":1614948147305,"results":"76","hashOfConfig":"63"},{"size":7872,"mtime":1615316027933,"results":"77","hashOfConfig":"63"},{"size":2656,"mtime":1614694347395,"results":"78","hashOfConfig":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"uype26",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"7p4scp",{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\index.js",[],["168","169"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Careers\\Careers.jsx",[],["170","171"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\errorHandler.js",[],["172","173"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\common\\TheHeader.jsx",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\KoboCare\\UZICare.js",["174","175","176"],"import React, { useEffect, useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport TheHeader from \"../common/TheHeader\";\nimport tyres from \"../../images/tyres.png\";\nimport diesel from \"../../images/diesel.png\";\nimport oil from \"../../images/oil.png\";\nimport Footer from \"../common/Footer\";\nimport logocolored from \"../../images/logo.png\";\nimport { httpGetNoToken, httpPostNoToken } from \"../helpers/api\";\nimport ReactPhoneInput from \"react-phone-input-2\";\nimport Loader from \"../helpers/Loader\";\nimport Swal from \"sweetalert2\";\nimport { handleError } from \"../helpers/errorHandler\";\nimport axios from \"axios\";\nimport SEO from \"../SEO\";\nimport { Event } from \"../helpers/tracking\";\n// import { useParams } from \"react-router-dom\";\n\nconst KoboCare = () => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  });\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}route/country`).then((res) => {\n      setCountry(res.data.data.countries);\n    });\n  }, []);\n\n  const [show, setShow] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  let [mobile, setMobile] = useState(\"\");\n  let [country, setCountry] = useState(\"\");\n  const [inputValues, setInputValues] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    secret: \"\",\n    mobile: \"\",\n    location: \"\",\n    country: \"\",\n    user_type: \"uzi_care\",\n    // user_type: \"customer\",\n  });\n  // const { lang } = useParams();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setInputValues({ ...inputValues, [name]: value });\n  };\n\n  const register = async (e) => {\n    try {\n      e.preventDefault();\n      setSubmitting(true);\n      const data = {\n        first_name: inputValues.first_name,\n        last_name: inputValues.last_name,\n        email: inputValues.email,\n        password: inputValues.secret,\n        // phone_number: inputValues.mobile,\n        phone_number:\n          mobile.charAt(4) === \"0\"\n            ? (mobile = mobile.replace(mobile.charAt(4), \"\"))\n            : mobile,\n        location: inputValues.location,\n        country: inputValues.country,\n        type: inputValues.user_type,\n      };\n      const response = await httpPostNoToken(\"create_user\", data);\n      Swal.fire({\n        title: \"Successful 😀\",\n        text: \"Your details have been submitted. We will get in touch shortly\",\n        type: \"success\",\n      });\n      Event(\n        \"UZI Logistics & Trucking\",\n        \"Registering for UZI Logistics\",\n        \"UZI Logistics registration successful\"\n      );\n      console.log(data);\n      console.log(response);\n      setSubmitting(false);\n      closeModal();\n      clearForm();\n    } catch (error) {\n      // handleError(error);\n      // const text = error.response.data\n      //   ? error.response.data.data.error.message\n      //   : error.response.data.message;\n      Swal.fire({\n        title: \"Sorry 😞\",\n        text: error.message,\n        type: \"error\",\n      });\n      setSubmitting(false);\n      clearForm();\n    }\n  };\n\n  const clearForm = () => {\n    setInputValues({\n      ...inputValues,\n      secret: \"\",\n      first_name: \"\",\n      user_type: \"\",\n      last_name: \"\",\n      country: \"\",\n      location: \"\",\n      email: \"\",\n      mobile: \"\",\n      phone: \"\"\n    });\n  };\n\n  const showModal = () => {\n    setSubmitting(true);\n    setShow(!show);\n    setSubmitting(false);\n  };\n  const handleOnChange = (value, data) => {\n    console.log(data);\n    setMobile(value);\n  };\n\n  const closeModal = () => {\n    setSubmitting(true);\n    setShow(!show);\n    setInputValues({\n      ...inputValues,\n      secret: \"\",\n      country: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      location: \"\",\n      email: \"\",\n      mobile: \"\",\n      user_type: \"\",\n    });\n    setSubmitting(false);\n    setMobile(\"\");\n  };\n\n  return (\n    <>\n      <SEO title=\"UZI-LOGISTICS-&-TRUCKING CARE | UZICare\" />\n      <div className=\"overflow-head\">\n        <TheHeader\n          bgColor=\"orange-header\"\n          kobo={logocolored}\n          color=\"black\"\n          sticky=\"sticky\"\n        />\n        {show && (\n          <div className=\"modal\">\n            <div className=\"register-box light-orange\">\n              <i\n                className=\"material-icons pointer green-x\"\n                onClick={closeModal}\n              >\n                {\" \"}\n                close\n              </i>\n              <form className=\"contact-box__images\" onSubmit={register}>\n                <p className=\"margin-bottom-1 bold\">\n                  <FormattedMessage\n                    id=\"app.signupkobocare\"\n                    defaultMessage=\"Sign up for UZICare\"\n                  />\n                </p>\n                <div className=\"grid-input input-text\">\n                  <div className=\"flex-column\">\n                    <label\n                      htmlFor=\"model\"\n                      className=\"input-text font-smaller\"\n                      data-aos=\"zoom-in\"\n                    >\n                      {\" \"}\n                      <FormattedMessage\n                        id=\"app.first-name\"\n                        defaultMessage=\"Firstname\"\n                      />\n                    </label>\n\n                    <input\n                      data-aos=\"zoom-in\"\n                      type=\"text\"\n                      placeholder=\"\"\n                      onChange={handleChange}\n                      name=\"first_name\"\n                      value={inputValues.first_name}\n                      required\n                    />\n                  </div>\n                  <div className=\"flex-column\">\n                    <label htmlFor=\"model\" className=\"input-text font-smaller\">\n                      <FormattedMessage\n                        id=\"app.last-name\"\n                        defaultMessage=\"Lastname\"\n                      />\n                    </label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"last_name\"\n                      value={inputValues.last_name}\n                      required\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"grid-input\">\n                  <div className=\"flex-column\">\n                    <label htmlFor=\"model\" className=\"input-text font-smaller\">\n                      <FormattedMessage\n                        id=\"app.email\"\n                        defaultMessage=\"Email address\"\n                      />\n                    </label>\n\n                    <input\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"email\"\n                      value={inputValues.email}\n                      required\n                      onChange={handleChange}\n                    />\n                  </div>\n                  <div className=\"flex-column\">\n                    <label\n                      htmlFor=\"model\"\n                      className=\"input-text font-smaller margin-label\"\n                    >\n                      {/* <FormattedMessage\n                        id=\"app.phone-number\"\n                        defaultMessage=\"Phone number\"\n                      /> */}\n                    </label>\n                    <ReactPhoneInput\n                      dropdownClass=\"\"\n                      inputClass=\"\"\n                      preferredCountries={[\"ng\", \"gh\"]}\n                      value={mobile}\n                      // defaultCountry={localStorage.code.toLowerCase() || \"ng\"}\n                      country=\"ng\"\n                      onChange={handleOnChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"flex flex-column bottom-padding-20\">\n                  <label className=\"label-color font-smaller\">\n                    <FormattedMessage\n                      id=\"app.password\"\n                      defaultMessage=\"Password\"\n                    />\n                  </label>\n                  <input\n                    type=\"password\"\n                    placeholder=\"\"\n                    name=\"secret\"\n                    autocomplete\n                    value={inputValues.secret}\n                    required\n                    onChange={handleChange}\n                  />\n                </div>\n                <div className=\"grid-input\">\n                  <div className=\"flex-column\">\n                    <label htmlFor=\"model\" className=\"input-text font-smaller\">\n                      <FormattedMessage\n                        id=\"app.country\"\n                        defaultMessage=\"Country\"\n                      />\n                    </label>\n\n                    <select\n                      type=\"text\"\n                      className=\"select-box\"\n                      name=\"country\"\n                      value={inputValues.country}\n                      required\n                      onChange={handleChange}\n                    >\n                      <option className=\"close\">Select Country</option>\n                      <option value=\"ng\">Nigeria</option>\n                      <option value=\"gh\">Ghana</option>\n                      {/* {country\n                       ? country.map((countries) => (\n                            <option value={countries.country}>\n                             {countries.country.toUpperCase()}\n                            </option>\n                          ))\n                         : \"\"} */}\n                    </select>\n                  </div>\n\n                  {/* <div className=\"flex-column\">\n                    <label htmlFor=\"model\" className=\"input-text font-smaller\">\n                      <FormattedMessage\n                        id=\"app.user_type\"\n                        defaultMessage=\"User Type\"\n                      />\n                    </label>\n                    <select\n                      type=\"text\"\n                      className=\"select-box\"\n                      name=\"user_type\"\n                      value={inputValues.user_type}\n                      required\n                      onChange={handleChange}\n                    >\n                      <option className=\"close\">Select User</option>\n                      <option value=\"ng\">UZI CARE</option>\n                      <option value=\"gh\">CUSTOMER</option>\n                    </select>\n                  </div> */}\n\n                  <div className=\"flex-column\">\n                    <label htmlFor=\"model\" className=\"input-text font-smaller\">\n                      <FormattedMessage\n                        id=\"app.location\"\n                        defaultMessage=\"Location\"\n                      />\n                    </label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"location\"\n                      value={inputValues.location}\n                      required\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"contact-button\">\n                  <button type=\"submit\" className=\"register-button capitalize\">\n                    {submitting ? (\n                      <Loader />\n                    ) : (\n                      <FormattedMessage\n                        id=\"app.signup\"\n                        defaultMessage=\"SIGN UP\"\n                      />\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n        <div className=\"care\">\n          <div className=\"care-heading middle\">\n            <h1 className=\"capitalize\" data-aos=\"zoom-out\">\n              UZI LOGISTICS & TRUCKING\n            </h1>\n            <p data-aos=\"zoom-out\">\n              <FormattedMessage\n                id=\"app.kobocare-caption\"\n                defaultMessage=\"Get products at discounted rates.\"\n              />\n            </p>\n            <p data-aos=\"zoom-in\">\n              {\" \"}\n              <FormattedMessage\n                id=\"app.get-prod-text\"\n                defaultMessage=\"UZICare is a solution for registered drivers on the UZI Logistics Platform, as part of our commitment to drivers.\"\n              />\n            </p>\n          </div>\n        </div>\n        <div className=\"flex care-box\">\n          <p className=\"care-box__card\" data-aos=\"zoom-out\">\n            <FormattedMessage\n              id=\"app.kobo-care-text\"\n              defaultMessage=\"UZICare is a solution for registered drivers on the Kobo Platform, as part of our commitment to drivers.\"\n            />\n\n            <ul className=\"margin-1 margin-left-1 \">\n              <li className=\"padding-1 list-care\">\n                <FormattedMessage\n                  id=\"app.about-list-1\"\n                  defaultMessage=\"Discounted Diesel sale to UZI Drivers in partnership with Oando/MRS filling stations nationwide.\"\n                />\n              </li>\n              <li className=\"padding-1 list-care\" data-aos=\"zoom-out\">\n                <FormattedMessage\n                  id=\"app.about-list-2\"\n                  defaultMessage=\"Access to Diver Support Centers across Nigeria with services like filling stations maintenance bay, fire services, law enforcements dedicated parking, rest bay for drivers etc.\"\n                />\n              </li>\n              <li className=\"padding-1 list-care\" data-aos=\"zoom-in\">\n                <FormattedMessage\n                  id=\"app.about-list-3\"\n                  defaultMessage=\"Integrated HMO plan on UZI Care for drivers and their families.\"\n                />\n              </li>\n            </ul>\n            <button\n              className=\"care-button middle\"\n              data-aos=\"zoom-in\"\n              onClick={showModal}\n              // onClick={() => window.open(\"https://care.kobo360.com\")}\n            >\n              <FormattedMessage id=\"app.started\" defaultMessage=\"Get started\" />\n            </button>\n          </p>\n          <div className=\"flex-column kobocare-images\" data-aos=\"zoom-in\">\n            <div className=\"care-box__images flex-align-center hover-scale margin-1\">\n              <img src={tyres} alt=\"\" className=\"tyre\" loading=\"lazy\" />\n              <span data-aos=\"zoom-out\">\n                <p>\n                  <FormattedMessage id=\"app.tyres\" defaultMessage=\"Tyres\" />\n                </p>\n                <h1>+20% off</h1>\n              </span>\n            </div>\n            <div className=\"care-box__images margin-left-5 flex-align-center hover-scale margin-1\">\n              <img src={diesel} alt=\"\" loading=\"lazy\" />\n              <span>\n                <p>\n                  <FormattedMessage id=\"app.diesel\" defaultMessage=\"Diesel\" />{\" \"}\n                </p>\n                <h1>+30% off</h1>\n              </span>\n            </div>\n            <div className=\"care-box__images flex-align-center hover-scale margin-1\">\n              <img src={oil} alt=\"\" loading=\"lazy\" />\n              <span>\n                <p>\n                  <FormattedMessage\n                    id=\"app.engine-oil\"\n                    defaultMessage=\"Engine oil\"\n                  />\n                </p>\n                <h1>+15% off</h1>\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"partners \">\n          <h1 className=\"center title\" data-aos=\"zoom-in\">\n            <FormattedMessage\n              id=\"app.partner-with\"\n              defaultMessage=\"Our Partners\"\n            />\n          </h1>\n          <div className=\"partners-images\" data-aos=\"zoom-out\">\n            {/* <img className=\"big\" src={oando} alt=\"\" loading=\"lazy\" />\n            <img className=\"small-icon\" src={total} alt=\"\" loading=\"lazy\" />\n            <img className=\"small-icon\" src={danco} alt=\"\" loading=\"lazy\" /> */}\n          </div>\n        </div>\n        <Footer />\n      </div>\n    </>\n  );\n};\nexport default KoboCare;\n","C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\App.js",[],["177","178"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\api.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\Slider.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Autocomplete.jsx",["179","180","181","182","183","184","185"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\About\\About.js",[],["186","187"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Home\\Home.js",[],["188","189"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\TradeIn\\TradeIn.jsx",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Map.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Pricing.jsx",["190","191","192","193","194"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\reportWebVitals.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\common\\Footer.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\Loading.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\tracking.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\helpers\\formatNumber.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Careers\\Accordion.jsx",[],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\SEO.js",[],["195","196"],"C:\\Users\\GTSTRIDE\\Downloads\\kunle\\uzi-logistics\\client\\src\\components\\Contact\\Contact.jsx",["197"],"import React, { useEffect, useState } from \"react\";\nimport TheHeader from \"../common/TheHeader\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_frozen from \"@amcharts/amcharts4/themes/frozen\";\nimport logocolored from \"../../images/logo.png\";\nimport Loader from \"../helpers/Loader\";\nimport { POST } from \"../helpers/api\";\nimport Swal from \"sweetalert2\";\n// import Axios from \"axios\";\nimport { FormattedMessage } from \"react-intl\";\nimport FooterContact from \"../common/FooterContact\";\nimport SEO from \"../SEO\";\nimport { Event } from \"../helpers/tracking\";\n// import { GET } from \"../helpers/api\";\nimport { httpPostNoToken } from \"../helpers/api\";\n\nam4core.useTheme(am4themes_frozen);\nam4core.useTheme(am4themes_animated);\n// var map = am4core.create(\"chartdiv\", am4maps.MapChart);\n\nconst Contact = () => {\n  const [submitting, setSubmitting] = useState(false);\n  // const [disabled, setDisabled] = useState(false);\n  const [, setCountry] = useState(\"\");\n  const [step, setStep] = useState(0);\n  const [change, setChange] = useState(false);\n\n  let countries = [\"NG\", \"GH\"];\n\n  const [countryItem, setCountryItem] = useState({\n    code: \"NG\",\n    country: \"Nigeria\",\n    address: \"49, Bode Thomas street, Surulere, Lagos.\",\n    email: \"info@uzi-logistics-&-trucking.com\",\n    mobile: \"+234 909 874 7941\",\n  });\n\n  const [inputValues, setInputValues] = useState({\n    truckType: \"\",\n    name: \"\",\n    business: \"\",\n    message: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n\n  //set country with the nav titles... if country code is ng, nigeria... if it drops\n  const countryDetails = [\n    {\n      code: \"NG\",\n      country: \"Nigeria\",\n      address: \"49, Bode Thomas street, Surulere, Lagos.\",\n      email: \"info@uzi-logistics-&-trucking.com\",\n      mobile: \"+233 909 874 7941\",\n    },\n    {\n      code: \"GH\",\n      country: \"Ghana\",\n      address:\n        \"3rd Floor, Excel House Off Nungua Barrier- Sakumono Road, Accra, Ghana\",\n      email: \"info.gh@uzi-logistics-&-trucking.com\",\n      mobile: \"+233 909 874 7941\",\n    },\n  ];\n\n  // useEffect(() => {\n\n  // }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setInputValues({ ...inputValues, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      setSubmitting(true);\n      const data = {\n        name: inputValues.name,\n        business_name: inputValues.business,\n        phone_number: inputValues.phone,\n        email: inputValues.email,\n        message: inputValues.message,\n      };\n      let res = await httpPostNoToken(\"contact\", data);\n      Swal.fire({\n        title: \"Successful 😀\",\n        text: \"Your details have been submitted. We will get in touch shortly\",\n        type: \"success\",\n      });\n      Event(\n        \"Contact\",\n        \"Sending Message to UZI-Logistics-&-Trucking\",\n        \"Sending Message Success\"\n      );\n      console.log(res);\n      setSubmitting(false);\n      clearForm();\n    } catch (error) {\n      setSubmitting(false);\n      Swal.fire({\n        title: \"Sorry 😞, we couldn't process your details\",\n        text: error.message,\n        type: \"error\",\n      });\n      clearForm();\n    }\n  };\n\n  useEffect(() => {\n    // setMap(am4core.create(\"chartdiv\", am4maps.MapChart));\n    let map = am4core.create(\"chartdiv\", am4maps.MapChart);\n    map.geodata = am4geodata_worldLow;\n    map.projection = new am4maps.projections.Miller();\n    var polygonSeries = new am4maps.MapPolygonSeries();\n    map.series.push(polygonSeries);\n    polygonSeries.useGeodata = true;\n    map.paddingRight = 20;\n\n    // Configure series\n    // setPolygonTemplate(polygonSeries.mapPolygons.template);\n    var polygonTemplate = polygonSeries.mapPolygons.template;\n    polygonTemplate.applyOnClones = true;\n    polygonTemplate.togglable = true;\n    polygonTemplate.tooltipText = \"{name}\";\n    polygonTemplate.nonScalingStroke = true;\n    polygonTemplate.strokeOpacity = 0.5;\n    polygonTemplate.fill = am4core.color(\"#ccc\");\n    var lastSelected;\n\n    //add colors;\n    polygonSeries.data = [\n      {\n        id: \"NG\",\n        name: \"Nigeria\",\n        zoomLevel: 7.0,\n        value: 10,\n        fill: am4core.color(\"#f3d6c7\"),\n      },\n      {\n        id: \"GH\",\n        name: \"Ghana\",\n        value: 10,\n        zoomLevel: 7.0,\n        fill: am4core.color(\"#f3d6c7\"),\n      },\n    ];\n    polygonSeries.dataFields.zoomLevel = \"zoomLevel\";\n    polygonTemplate.propertyFields.fill = \"fill\";\n\n    polygonTemplate.events.on(\"hit\", function (ev) {\n      setChange(false);\n\n      /* if \"active\" state already exists; use getKey() to retrieve it */\n      let nigeria = polygonSeries.getPolygonById(\"NG\");\n\n      if (nigeria.states.hasKey(\"active\")) {\n        nigeria.isActive = false;\n      }\n      // setChange(false);\n      setCountry(ev.target.dataItem.dataContext.id);\n      getCountry(ev.target.dataItem.dataContext.id);\n\n      if (lastSelected) {\n        lastSelected.isActive = false;\n      }\n      ev.target.series.chart.zoomToMapObject(ev.target);\n      if (lastSelected !== ev.target) {\n        lastSelected = ev.target;\n      }\n    });\n    map.homeZoomLevel = 1;\n    map.homeGeoPoint = {\n      latitude: -54,\n      longitude: 120,\n    };\n    var ss = polygonTemplate.states.create(\"active\");\n    ss.properties.fill = am4core.color(\"#2b3c95\");\n\n    var hs = polygonTemplate.states.create(\"hover\");\n    hs.properties.fill = am4core.color(\"#ff932f\");\n    //dataContext: {multiPolygon: Array(1), id: \"NG\", madeFromGeoData: true, name: \"Nigeria\"}\n    //get the polygontemplate and id and use it to run default states...\n    polygonTemplate.events.on(\"ready\", function (ev) {\n      var nigeria = polygonSeries.getPolygonById(\"NG\");\n\n      map.events.on(\"ready\", function (ev) {\n        map.zoomToMapObject(polygonSeries.getPolygonById(\"NG\"));\n      });\n      nigeria.isActive = true;\n    });\n    // Hide Antarctica\n    polygonSeries.exclude = [\"AQ\", \"RU\", \"CA\", \"US\", \"MX\", \"HN\"];\n\n    // Zoom control\n    map.zoomControl = new am4maps.ZoomControl();\n\n    // series1.mapPolygons.template.fill = am4core.color(\"#96BDC6\");\n    // series1.fill = am4core.color(\"#96BDC6\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    // Add image series\n    var imageSeries = map.series.push(new am4maps.MapImageSeries());\n    imageSeries.mapImages.template.propertyFields.longitude = \"longitude\";\n    imageSeries.mapImages.template.propertyFields.latitude = \"latitude\";\n    imageSeries.data = [\n      {\n        title: \"Lagos\",\n        latitude: 6.465422,\n        longitude: 3.406448,\n      },\n      {\n        title: \"Accra\",\n        latitude: 5.593222,\n        longitude: -0.140138,\n      },\n    ];\n\n    // add events to recalculate map position when the map is moved or zoomed\n    map.events.on(\"ready\", updateCustomMarkers);\n    map.events.on(\"mappositionchanged\", updateCustomMarkers);\n\n    // this function will take current images on the map and create HTML elements for them\n    function updateCustomMarkers(event) {\n      // go through all of the images\n      imageSeries.mapImages.each(function (image) {\n        // check if it has corresponding HTML element\n        if (!image.dummyData || !image.dummyData.externalElement) {\n          // create onex\n          image.dummyData = {\n            externalElement: createCustomMarker(image),\n          };\n        }\n\n        // reposition the element accoridng to coordinates\n        var xy = map.geoPointToSVG({\n          longitude: image.longitude,\n          latitude: image.latitude,\n        });\n        image.dummyData.externalElement.style.top = xy.y + \"px\";\n        image.dummyData.externalElement.style.left = xy.x + \"px\";\n      });\n    }\n\n    // this function creates and returns a new marker element\n    function createCustomMarker(image) {\n      var chart = image.dataItem.component.chart;\n\n      // create holder\n      var holder = document.createElement(\"div\");\n      holder.className = \"map-marker\";\n      holder.title = image.dataItem.dataContext.title;\n      holder.style.position = \"absolute\";\n\n      // maybe add a link to it?\n      if (undefined !== image.url) {\n        holder.onclick = function () {\n          window.location.href = image.url;\n        };\n        holder.className += \" map-clickable\";\n      }\n\n      // create dot\n      var dot = document.createElement(\"div\");\n      dot.className = \"dot\";\n      holder.appendChild(dot);\n\n      // create pulse\n      var pulse = document.createElement(\"div\");\n      pulse.className = \"pulse\";\n      holder.appendChild(pulse);\n\n      // append the marker to the map container\n      chart.svgContainer.htmlElement.appendChild(holder);\n\n      return holder;\n    }\n    //dispose\n\n    return () => {\n      if (map) {\n        map.dispose();\n      }\n    };\n\n    // eslint-disable-next-line\n  }, []);\n\n  // const getCountry = useCallback(\n  //   (countryId) => {\n  //     const selectedCountry = countryDetails.filter(\n  //       (country) => country.code === countryId\n  //     )[0];\n\n  //     setCountryItem(selectedCountry);\n  //   },\n  //   [countryDetails]\n  // );\n\n  const getCountry = (countryId) => {\n    const selectedCountry = countryDetails.filter(\n      (country) => country.code === countryId\n    )[0];\n\n    if (selectedCountry) {\n      setCountryItem(selectedCountry);\n    } else if (selectedCountry === undefined) {\n      setCountryItem(countryDetails[0]);\n    }\n  };\n\n  const clearForm = () => {\n    setInputValues({\n      ...inputValues,\n      name: \"\",\n      business: \"\",\n      message: \"\",\n      email: \"\",\n      phone: \"\",\n    });\n  };\n\n  const next = (e) => {\n    setChange(true);\n    setStep((prevState) => prevState + 1);\n\n    // getCountry(countries[step]);\n  };\n\n  const previous = () => {\n    setChange(true);\n    setStep((prevState) => prevState - 1);\n    // getCountry(countries[step]);\n  };\n\n  useEffect(() => {\n    if (step >= 0) {\n      const country = countryDetails.find(\n        (det) => det.code === countries[step]\n      );\n      // console.log(step, country)\n      setCountryItem(country);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [step]);\n\n  useEffect(() => {\n    if (change) {\n      let map = am4core.create(\"chartdiv\", am4maps.MapChart);\n      map.geodata = am4geodata_worldLow;\n      map.projection = new am4maps.projections.Miller();\n      var polygonSeries = new am4maps.MapPolygonSeries();\n      map.series.push(polygonSeries);\n      polygonSeries.useGeodata = true;\n\n      // Configure series\n      // setPolygonTemplate(polygonSeries.mapPolygons.template);\n      var polygonTemplate = polygonSeries.mapPolygons.template;\n      polygonTemplate.applyOnClones = true;\n      polygonTemplate.togglable = true;\n      polygonTemplate.tooltipText = \"{name}\";\n      polygonTemplate.nonScalingStroke = true;\n      polygonTemplate.strokeOpacity = 0.5;\n      polygonTemplate.fill = am4core.color(\"#ccc\");\n      var lastSelected;\n\n      //add colors;\n      polygonSeries.data = [\n        {\n          id: \"NG\",\n          name: \"Nigeria\",\n          zoomLevel: 7.0,\n          value: 10,\n          fill: am4core.color(\"#f3d6c7\"),\n        },\n        {\n          id: \"GH\",\n          name: \"Ghana\",\n          value: 10,\n          zoomLevel: 7.0,\n          fill: am4core.color(\"#f3d6c7\"),\n        },\n      ];\n      polygonSeries.dataFields.zoomLevel = \"zoomLevel\";\n      polygonTemplate.propertyFields.fill = \"fill\";\n\n      //responsible for the zoom of the map when hit...create an active event\n      polygonTemplate.events.on(\"hit\", function (ev) {\n        setCountry(ev.target.dataItem.dataContext.id);\n        getCountry(ev.target.dataItem.dataContext.id);\n        if (lastSelected) {\n          lastSelected.isActive = false;\n        }\n        ev.target.series.chart.zoomToMapObject(ev.target);\n\n        if (lastSelected !== ev.target) {\n          lastSelected = ev.target;\n        }\n      });\n\n      var ss = polygonTemplate.states.create(\"active\");\n\n      ss.properties.fill = am4core.color(\"#2b3c95\");\n      // dataContext: {multiPolygon: Array(1), id: \"NG\", madeFromGeoData: true, name: \"Nigeria\"}\n      //get the polygontemplate and id and use it to run default states...\n      polygonTemplate.events.on(\"ready\", function (ev) {\n        var country = polygonSeries.getPolygonById(\n          countryItem ? countryItem.code : \"NG\"\n        );\n\n        map.events.on(\"ready\", function (ev) {\n          map.zoomToMapObject(\n            polygonSeries.getPolygonById(countryItem ? countryItem.code : \"NG\")\n          );\n        });\n        country.isActive = true;\n      });\n\n      // Hide Antarctica\n      polygonSeries.exclude = [\"AQ\", \"RU\", \"CA\", \"US\", \"MX\", \"HN\"];\n\n      /* Branches Color */\n      // Zoom control\n      map.zoomControl = new am4maps.ZoomControl();\n\n      // Add image series\n      var imageSeries = map.series.push(new am4maps.MapImageSeries());\n      imageSeries.mapImages.template.propertyFields.longitude = \"longitude\";\n      imageSeries.mapImages.template.propertyFields.latitude = \"latitude\";\n      imageSeries.data = [\n        {\n          title: \"Lagos\",\n          latitude: 6.465422,\n          longitude: 3.406448,\n        },\n        {\n          title: \"Accra\",\n          latitude: 5.593222,\n          longitude: -0.140138,\n        },\n      ];\n\n      // add events to recalculate map position when the map is moved or zoomed\n      map.events.on(\"ready\", updateCustomMarkers);\n      map.events.on(\"mappositionchanged\", updateCustomMarkers);\n\n      // this function will take current images on the map and create HTML elements for them\n      function updateCustomMarkers(event) {\n        // go through all of the images\n        imageSeries.mapImages.each(function (image) {\n          // check if it has corresponding HTML element\n          if (!image.dummyData || !image.dummyData.externalElement) {\n            // create onex\n            image.dummyData = {\n              externalElement: createCustomMarker(image),\n            };\n          }\n\n          // reposition the element accoridng to coordinates\n          var xy = map.geoPointToSVG({\n            longitude: image.longitude,\n            latitude: image.latitude,\n          });\n          image.dummyData.externalElement.style.top = xy.y + \"px\";\n          image.dummyData.externalElement.style.left = xy.x + \"px\";\n        });\n      }\n\n      // this function creates and returns a new marker element\n      function createCustomMarker(image) {\n        var chart = image.dataItem.component.chart;\n\n        // create holder\n        var holder = document.createElement(\"div\");\n        holder.className = \"map-marker\";\n        holder.title = image.dataItem.dataContext.title;\n        holder.style.position = \"absolute\";\n\n        // maybe add a link to it?\n        if (undefined !== image.url) {\n          holder.onclick = function () {\n            window.location.href = image.url;\n          };\n          holder.className += \" map-clickable\";\n        }\n\n        // create dot\n        var dot = document.createElement(\"div\");\n        dot.className = \"dot\";\n        holder.appendChild(dot);\n\n        // create pulse\n        var pulse = document.createElement(\"div\");\n        pulse.className = \"pulse\";\n        holder.appendChild(pulse);\n\n        // append the marker to the map container\n        chart.svgContainer.htmlElement.appendChild(holder);\n\n        return holder;\n      }\n\n      return () => {\n        if (map) {\n          map.dispose();\n        }\n      };\n    }\n    // eslint-disable-next-line\n  }, [change, getCountry]);\n\n  return (\n    <>\n      <SEO title=\"UZI-Logistics-&-Trucking | Contact Us\" />\n      <div className=\"overflow-head\">\n        <TheHeader\n          bgColor=\"gradient-header\"\n          kobo={logocolored}\n          color=\"black\"\n          sticky=\"sticky\"\n        />\n        <div className=\"contact\">\n          <div id=\"chartdiv\" style={{ width: \"100%\", height: \"100vh\" }}></div>\n          <div className=\"contact-section\">\n            <div className=\"contact-nav\">\n              <span\n                className={`${step === 0 && \"disabled\"} pointer map-button`}\n                onClick={previous}\n              >\n                <i className=\"material-icons map-icon-smaller pointer\">\n                  arrow_back_ios\n                </i>\n              </span>\n              <span\n                className={`${\n                  step === countries.length - 1 && \"disabled\"\n                } pointer map-button margin-left-1`}\n                onClick={next}\n              >\n                <i className=\"material-icons map-icon-smaller pointer\">\n                  arrow_forward_ios\n                </i>\n              </span>\n            </div>\n\n            <div className=\"contact-info\">\n              <div className=\"contact-info__details\">\n                <h1>{countryItem ? countryItem.country : \"N/A\"}</h1>\n                <div className=\"blue-side\" style={{ fontSize: \"1.2em\" }}>\n                  <p className=\"grey capitalize\" style={{ width: \"50%\" }}>\n                    {countryItem ? countryItem.address : \"N/A\"}\n                  </p>\n                  <p className=\"grey\">\n                    {countryItem ? countryItem.email : \"N/A\"}\n                  </p>\n                  <p className=\"grey\">\n                    {countryItem ? countryItem.mobile : \"N/A\"}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"contact-box \">\n              <h1 className=\"center\">Feel free to reach out to us</h1>\n              <form\n                className=\"contact-box__images margin-1\"\n                onSubmit={handleSubmit}\n              >\n                <div className=\"grid-input\">\n                  <div className=\"flex-column\">\n                    <label htmlFor=\"model\" className=\"grey\">\n                      <FormattedMessage id=\"app.name\" defaultMessage=\"Name\" />\n                    </label>\n\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      value={inputValues.name}\n                      placeholder=\"\"\n                      required\n                      onChange={handleChange}\n                    />\n                  </div>\n                  <div className=\"flex-column\">\n                    <label htmlFor=\"model\" className=\"grey\">\n                      <FormattedMessage\n                        id=\"app.business-name\"\n                        defaultMessage=\"Business Name\"\n                      />\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"business\"\n                      placeholder=\"\"\n                      required\n                      value={inputValues.business}\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"grid-input\">\n                  <div className=\"flex-column\">\n                    <label htmlFor=\"model\" className=\"grey\">\n                      <FormattedMessage\n                        id=\"app.email\"\n                        defaultMessage=\"Email address\"\n                      />\n                    </label>\n\n                    <input\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"email\"\n                      required\n                      value={inputValues.email}\n                      onChange={handleChange}\n                    />\n                  </div>\n                  <div className=\"flex-column\">\n                    <label htmlFor=\"model\" className=\"grey\">\n                      <FormattedMessage\n                        id=\"app.phone-number\"\n                        // defaultMessage=\"Phone number\"\n                      />\n                    </label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"phone\"\n                      required\n                      value={inputValues.phone}\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"flex-column textarea\">\n                  <label htmlFor=\"model\" className=\"grey\">\n                    <FormattedMessage\n                      id=\"app.message\"\n                      defaultMessage=\"Message\"\n                    />\n                  </label>\n                  <textarea\n                    type=\"text\"\n                    name=\"message\"\n                    className=\"\"\n                    required\n                    cols={2}\n                    rows={2}\n                    value={inputValues.message}\n                    onChange={handleChange}\n                  />\n                </div>\n                <div className=\"contact-button\">\n                  <button\n                    className=\"pricing-button capitalize width-100\"\n                    type=\"submit\"\n                  >\n                    {submitting ? (\n                      <Loader />\n                    ) : (\n                      <FormattedMessage\n                        id=\"app.submit\"\n                        defaultMessage=\"Submit\"\n                      />\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        <FooterContact />\n      </div>\n    </>\n  );\n};\n\nexport default Contact;\n","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\helpers\\api.js",[],["198","199"],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Careers\\Careers.jsx",[],["200","201"],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\helpers\\Loader.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Autocomplete.jsx",["202"],"import React, { useEffect, useCallback, useRef, useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { httpGetNoToken } from \"../helpers/api\";\nimport Loader from \"../helpers/Loader\";\n\nconst Autocomplete = ({\n  setRef,\n  _setRef,\n  state,\n  setChange,\n  onSubmit,\n  loading,\n  handlePlaceSelect,\n  _handlePlaceSelect,\n  handleChange,\n  children,\n  input_values,\n}) => {\n  const pickupRef = useRef(null);\n  const destinationRef = useRef(null);\n  const [trucks, setTrucks] = useState({});\n  const [truck_types, setTruckTypes] = useState([]);\n  const [tonnageRange, setTonnageRange] = useState([]);\n\n  const [inputValues, setInputValues] = useState({\n    truckType: \"\",\n    tonnage: \"\",\n  });\n\n  const getRef = useCallback(() => {\n    setRef(pickupRef.current);\n  }, [setRef]);\n\n  const _getRef = useCallback(() => {\n    _setRef(destinationRef.current);\n  }, [_setRef]);\n\n  const getTruckTypes = async () => {\n    try {\n      let res = await httpGetNoToken(\"get_truck_types\");\n      console.log(\"res>\", res);\n      setTruckTypes(res.data);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const newTonnageRange = (e) => {\n    let filtered = truck_types.filter(\n      (item) => item.type.toLowerCase() === e.target.value.toLowerCase()\n    );\n    setTonnageRange(filtered);\n    setInputValues({ ...inputValues, truckType: e.target.value });\n  };\n\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setInputValues({ ...inputValues, [name]: value });\n  // };\n\n  useEffect(() => {\n    getTruckTypes();\n    let res = httpGetNoToken(\"get_truck_types\").then((data) => {\n      setTrucks(data.data.data);\n    });\n    getRef();\n    _getRef();\n    console.log(res);\n  }, [getRef, _getRef]);\n\n  // useEffect(() => {\n  //   if (state.truck_types) {\n  //     const sizes = trucks.cargo_tonnes.find(\n  //       (truck_types) =>\n  //         truck_types.name.toLowerCase() === state.truck_types.toLowerCase()\n  //     ).size;\n  //     setSizes(sizes);\n  //   }\n  // }, [state.truck_types, trucks.assetClasses]);\n\n  return (\n    <div className=\"grid trade-box price-box\">\n      <form className=\"trade-box__form price-form\" onSubmit={onSubmit}>\n        {/* <label htmlFor=\"type\" className=\"grey\">\n          <FormattedMessage id=\"app.country\" defaultMessage=\"Country\" />\n          <input\n            ref={pickupRef}\n            type=\"text\"\n            placeholder=\"\"\n            name=\"sourceAddress\"\n            onKeyPress={(e) => {\n              e.key === \"Enter\" && e.preventDefault();\n            }}\n            onChange={handlePlaceSelect}\n            className=\"resizedTextbox\"\n            required\n          />\n        </label> */}\n        <label htmlFor=\"type\" className=\"grey\">\n          <FormattedMessage id=\"app.pickup\" defaultMessage=\"Pickup address\" />\n          <input\n            ref={pickupRef}\n            type=\"text\"\n            placeholder=\"\"\n            name=\"sourceAddress\"\n            onKeyPress={(e) => {\n              e.key === \"Enter\" && e.preventDefault();\n            }}\n            onChange={handlePlaceSelect}\n            className=\"resizedTextbox\"\n            required\n          />\n        </label>\n\n        <label htmlFor=\"model\" className=\"grey\">\n          <FormattedMessage\n            id=\"app.destination\"\n            defaultMessage=\"Destination address\"\n          />\n          <input\n            ref={destinationRef}\n            type=\"text\"\n            placeholder=\"\"\n            name=\"destinationAdress\"\n            onChange={_handlePlaceSelect}\n            className=\"resizedTextbox\"\n            required\n          />\n        </label>\n\n        <div className=\"grid-input\">\n          <label htmlFor=\"model\" className=\"grey\">\n            <FormattedMessage id=\"app.truck-type\" defaultMessage=\"Truck type\" />\n            <select\n              name=\"truckType\"\n              className=\"select-box black\"\n              required\n              // onChange={handleChange}\n              onChange={(value) => newTonnageRange(value)}\n              value={inputValues.truckType}\n              // value={state.truck_types}\n            >\n              <option value=\"\"></option>\n              {[...new Set(truck_types.map((item) => item.type))].map(\n                (item, index) => (\n                  <option value={item} key={index}>\n                    {/* console.log(item) */}\n                    {item}\n                  </option>\n                )\n              )}\n            </select>\n          </label>\n\n          <label htmlFor=\"model\" className=\"grey\">\n            <FormattedMessage id=\"app.cargo\" defaultMessage=\"Tonnage\" />\n            <select\n              name=\"tonnage\"\n              className=\"select-box black\"\n              required\n              value={input_values.tonnage}\n              onChange={handleChange}\n              // onChange={setChange}\n              // value={state.tonnage}\n            >\n              <option value=\"\"></option>\n              {tonnageRange.map((item, index) => (\n                <option value={item.id} key={index}>\n                  {/* console.log(item) */}\n                  {/* {item.cargo_tonnes} */}\n                  {item.cargo_tonnes}\n                </option>\n              ))}\n              {/* {sizes.length > 0\n                ? sizes.map(({ size }, index) => (\n                    <option key={index} value={size}>\n                      {size}\n                    </option>\n                  ))\n                : \"\"} */}\n            </select>\n          </label>\n        </div>\n\n        <div className=\"button-pricing margin-1\">\n          <button className=\"pricing-button capitalize\">\n            {loading ? (\n              <Loader />\n            ) : (\n              <FormattedMessage id=\"app.submit\" defaultMessage=\"Submit\" />\n            )}\n          </button>\n        </div>\n      </form>\n      {children}\n    </div>\n  );\n};\n\nexport default Autocomplete;\n","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Pricing.jsx",["203","204","205"],"import React, { useState, useEffect, useRef } from \"react\";\nimport Footer from \"../common/Footer\";\n// import sync from \"../../images/synchronize-arrows-1.svg\";\nimport Swal from \"sweetalert2\";\nimport { httpGetNoToken } from \".././helpers/api\";\nimport TheHeader from \"../common/TheHeader\";\nimport logocolored from \"../../images/logo.png\";\nimport { FormattedMessage } from \"react-intl\";\nimport Loader from \"../helpers/Loader\";\nimport Autocomplete from \"./Autocomplete\";\nimport iosstore from \"../../images/app-store-logo@2x.png\";\nimport googlestore from \"../../images/en_badge_web_generic@2x.png\";\nimport MapContainer from \"./Map\";\nimport SEO from \"../SEO\";\n\nconst Pricing = () => {\n  const [submitting, setSubmitting] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [truck_types, setTruckTypes] = useState([]);\n  const [costPrice, setCostPrice] = useState(\"\");\n  const [sourceAddress, destinationAddress] = useState(\"\");\n  const [tonnage, center] = useState(\"\");\n  const [source, setSource] = useState({});\n  const [destination, setDestination] = useState({});\n  // const [pickupState, destinationState] = useState(\"\");\n  const [state] = useState(\"\");\n  // const destinationAddress = useRef();\n  const [autocomplete, autocomplete_] = useState(null);\n  // const pickupAddress = useRef();\n\n  const getTruckTypes = async () => {\n    try {\n      let res = await httpGetNoToken(\"get_truck_types\");\n      setTruckTypes(res.data);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  useEffect(() => {\n    getTruckTypes();\n  }, []);\n\n  const [inputValues, setInputValues] = useState({\n    tonnage: \"\",\n    truckType: \"\",\n    source: \"\",\n    destinationAddress: \"\",\n  });\n\n  const toPlayStore = () => {\n    window.open(\n      \"https://play.google.com/store/apps/details?id=io.kobodriver.kobodriver\"\n    );\n  };\n\n  const toAppleStore = () => {\n    window.open(\"https://apps.apple.com/gh/app/kobo-customer/id1476414044\");\n  };\n\n  const setRef = (input) => {\n    let pickupAddress = input;\n    if (!window.google) {\n      return false;\n    }\n    let autocomplete = new window.google.maps.places.Autocomplete(\n      pickupAddress\n    );\n    autocomplete.setComponentRestrictions({\n      country: [\"ng\"],\n    });\n    // Fire Event when a name is selected\n    autocomplete.addListener(\"place_changed\", () => {\n      let addressObject = autocomplete.getPlace();\n      if (addressObject !== undefined) {\n        let sourceLat = addressObject.geometry\n          ? addressObject.geometry.location.lat()\n          : null;\n        let sourceLng = addressObject.geometry\n          ? addressObject.geometry.location.lng()\n          : null;\n        setSource({\n          source: { lat: sourceLat, lng: sourceLng },\n          center: { lat: sourceLat, lng: sourceLng },\n          sourceAddress: addressObject && addressObject.formatted_address,\n        });\n      }\n    });\n  };\n\n  const _setRef = (input) => {\n    let destinationAddress = input;\n    //needed to get the place().\n    if (!window.google) {\n      return false;\n    }\n    let autocomplete_ = new window.google.maps.places.Autocomplete(\n      destinationAddress\n    );\n    autocomplete_.setComponentRestrictions({\n      country: [\"ng\"],\n    });\n    autocomplete_.addListener(\"place_changed\", () => {\n      let addressObject = autocomplete_.getPlace();\n      if (addressObject !== undefined) {\n        let destLat = addressObject.geometry.location.lat();\n        let destLng = addressObject.geometry.location.lng();\n        setDestination({\n          destination: { lat: destLat, lng: destLng },\n          center: { lat: destLat, lng: destLng },\n          destinationAddress: addressObject && addressObject.formatted_address,\n        });\n      }\n    });\n  };\n\n  const handlePlaceSelect = (e) => {\n    //console.log('e>>',autocomplete.getPlace());\n    // let addressObject = autocomplete.getDirectionService();\n    // if (addressObject !== undefined) {\n    //   let sourceLat = addressObject.geometry\n    //     ? addressObject.geometry.location.lat()\n    //     : null;\n    //   let sourceLng = addressObject.geometry\n    //     ? addressObject.geometry.location.lng()\n    //     : null;\n    //   state((prevState) => ({\n    //     ...prevState,\n    //     source: { lat: sourceLat, lng: sourceLng },\n    //     center: { lat: sourceLat, lng: sourceLng },\n    //     sourceAddress: addressObject && addressObject.formatted_address,\n    //   }));\n    // }\n  };\n\n  // Extract City From Address Object\n  const _handlePlaceSelect = (e) => {\n    // let addressObject = autocomplete_.getDirectionService();\n    // if (addressObject !== undefined) {\n    //   let destLat = addressObject.geometry.location.lat();\n    //   let destLng = addressObject.geometry.location.lng();\n    //   source((prevState) => ({\n    //     ...prevState,\n    //     destination: { lat: destLat, lng: destLng },\n    //     center: { lat: destLat, lng: destLng },\n    //     destinationAddress: addressObject && addressObject.formatted_address,\n    //   }));\n    // }\n  };\n\n  const formatPrice = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  // const resetEstimator = (e) => {\n  //   e.preventDefault();\n  //   window.location.reload();\n  // };\n\n  const clearForm = () => {\n    setInputValues({\n      ...inputValues,\n      secret: \"\",\n      // tonnage: \"\",\n      truckType: \"\",\n      sourceAddress: \"\",\n      destinationAddress: \"\",\n      truck_types,\n      destination: \"\",\n      source: \"\",\n    });\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      setLoading(true);\n      setSubmitting(true);\n      if (!source || !destination || !inputValues.tonnage) {\n        return Swal.fire({\n          title: \"Sorry 😞\",\n          text: \"Please fill all fields before submitting\",\n          type: \"error\",\n        });\n      }\n\n      if (!source.source || !destination.destination) {\n        return Swal.fire({\n          title: \"Sorry 😞\",\n          text:\n            \"The address you provided isn't available. Please choose from the selected address\",\n          type: \"error\",\n        });\n      }\n\n      let directionsService = new window.google.maps.DirectionsService();\n      let directionsRenderer = new window.google.maps.DirectionsRenderer();\n      // directionsRenderer.setMap(map); // Existing map object displays directions\n      // Create route from existing points used for markers\n      let source_lat = source.source.lat;\n      let source_lng = source.source.lng;\n      let destination_lat = destination.destination.lat;\n      let destination_lng = destination.destination.lng;\n      let selected_tonnage = truck_types.filter(\n        (item) => item.id === inputValues.tonnage\n      )[0];\n      const route = {\n        origin: { lat: source_lat, lng: source_lng },\n        destination: { lat: destination_lat, lng: destination_lng },\n        travelMode: \"DRIVING\",\n      };\n      directionsService.route(route, function (response, status) {\n        // anonymous function to capture directions\n        setLoading(false);\n        setSubmitting(false);\n        // clearForm();\n        if (status !== \"OK\") {\n          window.alert(\"Directions request failed due to \" + status);\n          return;\n        } else {\n          directionsRenderer.setDirections(response); // Add route to the map\n          var directionsData = response.routes[0].legs[0]; // Get data about the mapped route\n          if (!directionsData) {\n            window.alert(\"Directions request failed. Please try again\");\n            return;\n          } else {\n            let distance = directionsData.distance.text\n              .replace(\"km\", \"\")\n              .replace(\"m\", \"\");\n            setCostPrice(selected_tonnage.price_per_km * distance);\n          }\n        }\n      });\n    } catch (error) {\n      setLoading(false);\n      setSubmitting(false);\n      clearForm();\n      const msg =\n        typeof error !== \"object\"\n          ? error.response.data.message\n          : \"The address you provided isn't available. Please choose from the selected address\";\n\n      Swal.fire({\n        title: \"Sorry 😞\",\n        text: msg,\n        type: \"error\",\n      });\n      setSubmitting(false);\n      clearForm();\n    }\n  };\n\n  const handleChange = (e) => {\n    console.log(\"ee>>\", e);\n    const { name, value } = e.target;\n    setInputValues({ ...inputValues, [name]: value });\n  };\n\n  return (\n    <>\n      <SEO title=\"UZI Logistics_&_Trucking | Pricing\" />\n      <div>\n        <TheHeader\n          bgColor=\"light-blue\"\n          kobo={logocolored}\n          color=\"black\"\n          sticky=\"sticky\"\n        />\n        <div className=\"pricing\">\n          <div className=\"estimator-heading middle\">\n            <h1 className=\"estimator\" data-aos=\"zoom-out\">\n              <FormattedMessage\n                id=\"app.estimator-title\"\n                defaultMessage=\"Price Estimator\"\n              />\n            </h1>\n          </div>\n          <p className=\"center\" data-aos=\"zoom-in\">\n            <FormattedMessage\n              id=\"app.estimator-text\"\n              defaultMessage=\"How much does UZI Logistics cost in your city? Calculate a fare estimate for\n                your next trip.\"\n            />\n            <br />\n            <FormattedMessage\n              id=\"app.estimator-text\"\n              defaultMessage=\"Simply enter a pickup location and destination to get started.\"\n            />\n          </p>\n\n          <Autocomplete\n            setRef={setRef}\n            _setRef={_setRef}\n            handlePlaceSelect={handlePlaceSelect}\n            _handlePlaceSelect={_handlePlaceSelect}\n            // state={state}\n            // setChange={this.onChange}\n            onSubmit={onSubmit}\n            handleChange={handleChange}\n            onChange={handleChange}\n            input_values={inputValues}\n            //loading={false}\n          >\n            <MapContainer\n              source={source}\n              dest={destination}\n              center={center}\n              sourceAddress={sourceAddress}\n              // // onChange={this.onChange}\n              onChange={handleChange}\n              tonnage={tonnage}\n              destAddress={destinationAddress}\n            />\n          </Autocomplete>\n        </div>\n        <div className=\"price grid trade-box\">\n          {costPrice ? (\n            <div className=\"price-estimator\">\n              <p className=\"white\">\n                {\" \"}\n                <FormattedMessage\n                  id=\"app.estimator-range\"\n                  defaultMessage=\"The service is going to cost :\"\n                />\n              </p>\n              <p className=\"bold white font-5\">\n                {\" \"}\n                {loading ? (\n                  <Loader />\n                ) : costPrice ? (\n                  `NGN\n                ${formatPrice(Math.round(costPrice))}`\n                ) : (\n                  \"\"\n                )}\n              </p>\n              {/* <div\n                className=\"flex-align-center white \"\n                onClick={resetEstimator}\n              >\n                <img\n                  src={sync}\n                  alt=\"sync\"\n                  className=\"pd-1 pointer rotate-90 \"\n                  loading=\"lazy\"\n                />\n                <p className=\"pointer white padding-1-top\">\n                  <FormattedMessage id=\"app.reset\" defaultMessage=\"Reset\" />\n                </p>\n              </div> */}\n              <div className=\"download-app download\">\n                <p className=\"capitalize white margin-bottom-1 right margin-top-2\">\n                  <FormattedMessage\n                    id=\"app.download\"\n                    defaultMessage=\"download our apps\"\n                  />\n                </p>\n                <div className=\"app-store\">\n                  <img\n                    src={iosstore}\n                    alt=\"app-store\"\n                    onClick={toAppleStore}\n                    className=\"pointer download-img\"\n                    loading=\"lazy\"\n                  />\n                  <img\n                    src={googlestore}\n                    alt=\"google-store\"\n                    onClick={toPlayStore}\n                    className=\"pointer\"\n                    loading=\"lazy\"\n                  />\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default Pricing;\n","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\index.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Terms-Conditions\\Terms.jsx",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\helpers\\errorHandler.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\reportWebVitals.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Terms-Conditions\\Privacy.jsx",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Pricing\\Map.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\TradeIn\\TradeIn.jsx",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\common\\TheHeader.jsx",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\Services\\Services.jsx",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\client\\src\\components\\SEO.js",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"206","replacedBy":"210"},{"ruleId":"208","replacedBy":"211"},{"ruleId":"206","replacedBy":"212"},{"ruleId":"208","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":9,"column":10,"nodeType":"216","messageId":"217","endLine":9,"endColumn":24},{"ruleId":"214","severity":1,"message":"218","line":13,"column":10,"nodeType":"216","messageId":"217","endLine":13,"endColumn":21},{"ruleId":"214","severity":1,"message":"219","line":33,"column":8,"nodeType":"216","messageId":"217","endLine":33,"endColumn":15},{"ruleId":"206","replacedBy":"220"},{"ruleId":"208","replacedBy":"221"},{"ruleId":"214","severity":1,"message":"222","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":13},{"ruleId":"214","severity":1,"message":"223","line":20,"column":10,"nodeType":"216","messageId":"217","endLine":20,"endColumn":16},{"ruleId":"214","severity":1,"message":"224","line":21,"column":10,"nodeType":"216","messageId":"217","endLine":21,"endColumn":15},{"ruleId":"214","severity":1,"message":"225","line":21,"column":17,"nodeType":"216","messageId":"217","endLine":21,"endColumn":25},{"ruleId":"214","severity":1,"message":"226","line":24,"column":10,"nodeType":"216","messageId":"217","endLine":24,"endColumn":22},{"ruleId":"214","severity":1,"message":"227","line":24,"column":24,"nodeType":"216","messageId":"217","endLine":24,"endColumn":39},{"ruleId":"228","severity":1,"message":"229","line":70,"column":6,"nodeType":"230","endLine":70,"endColumn":23,"suggestions":"231"},{"ruleId":"206","replacedBy":"232"},{"ruleId":"208","replacedBy":"233"},{"ruleId":"206","replacedBy":"234"},{"ruleId":"208","replacedBy":"235"},{"ruleId":"214","severity":1,"message":"236","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"237","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"238","line":1,"column":38,"nodeType":"216","messageId":"217","endLine":1,"endColumn":44},{"ruleId":"214","severity":1,"message":"239","line":5,"column":10,"nodeType":"216","messageId":"217","endLine":5,"endColumn":14},{"ruleId":"214","severity":1,"message":"240","line":145,"column":13,"nodeType":"216","messageId":"217","endLine":145,"endColumn":17},{"ruleId":"206","replacedBy":"241"},{"ruleId":"208","replacedBy":"242"},{"ruleId":"214","severity":1,"message":"239","line":10,"column":10,"nodeType":"216","messageId":"217","endLine":10,"endColumn":14},{"ruleId":"206","replacedBy":"243"},{"ruleId":"208","replacedBy":"244"},{"ruleId":"206","replacedBy":"245"},{"ruleId":"208","replacedBy":"246"},{"ruleId":"214","severity":1,"message":"223","line":21,"column":10,"nodeType":"216","messageId":"217","endLine":21,"endColumn":16},{"ruleId":"214","severity":1,"message":"238","line":1,"column":38,"nodeType":"216","messageId":"217","endLine":1,"endColumn":44},{"ruleId":"214","severity":1,"message":"247","line":17,"column":10,"nodeType":"216","messageId":"217","endLine":17,"endColumn":20},{"ruleId":"214","severity":1,"message":"248","line":28,"column":24,"nodeType":"216","messageId":"217","endLine":28,"endColumn":37},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],["249"],["250"],["249"],["250"],"no-unused-vars","'httpGetNoToken' is defined but never used.","Identifier","unusedVar","'handleError' is defined but never used.","'country' is assigned a value but never used.",["249"],["250"],"'axios' is defined but never used.","'trucks' is assigned a value but never used.","'sizes' is assigned a value but never used.","'setSizes' is assigned a value but never used.","'tonnageRange' is assigned a value but never used.","'setTonnageRange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTonnes'. Either include it or remove the dependency array.","ArrayExpression",["251"],["249"],["250"],["249"],["250"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'POST' is defined but never used.","'data' is assigned a value but never used.",["249"],["250"],["249"],["250"],["249"],["250"],"'submitting' is assigned a value but never used.","'autocomplete_' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},"Update the dependencies array to be: [getRef, _getRef, getTonnes]",{"range":"254","text":"255"},[1831,1848],"[getRef, _getRef, getTonnes]"]