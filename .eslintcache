[{"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\reportWebVitals.js":"1","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\components\\Home\\Home.js":"2","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\components\\helpers\\tracking.js":"3","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\components\\TradeIn\\TradeIn.jsx":"4","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\components\\helpers\\Slider.js":"5","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\components\\Pricing\\Autocomplete.jsx":"6","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\index.js":"7","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\components\\Terms-Conditions\\Privacy.jsx":"8"},{"size":362,"mtime":1607695544000,"results":"9","hashOfConfig":"10"},{"size":16918,"mtime":1615829131097,"results":"11","hashOfConfig":"10"},{"size":706,"mtime":1608220448000,"results":"12","hashOfConfig":"10"},{"size":12101,"mtime":1615846346954,"results":"13","hashOfConfig":"10"},{"size":3011,"mtime":1615644297033,"results":"14","hashOfConfig":"10"},{"size":5904,"mtime":1616146173425,"results":"15","hashOfConfig":"10"},{"size":519,"mtime":1609451335746,"results":"16","hashOfConfig":"10"},{"size":17760,"mtime":1609858024681,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"886p1e",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\reportWebVitals.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\components\\Home\\Home.js",[],["36","37"],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\components\\helpers\\tracking.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\components\\TradeIn\\TradeIn.jsx",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\components\\helpers\\Slider.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\components\\Pricing\\Autocomplete.jsx",["38"],"import React, { useEffect, useCallback, useRef, useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { httpGetNoToken } from \"../helpers/api\";\nimport Loader from \"../helpers/Loader\";\n\nconst Autocomplete = ({\n  setRef,\n  _setRef,\n  state,\n  setChange,\n  onSubmit,\n  loading,\n  handlePlaceSelect,\n  _handlePlaceSelect,\n  handleChange,\n  children,\n  input_values,\n}) => {\n  const pickupRef = useRef(null);\n  const destinationRef = useRef(null);\n  const [trucks, setTrucks] = useState({});\n  const [truck_types, setTruckTypes] = useState([]);\n  const [tonnageRange, setTonnageRange] = useState([]);\n\n  const [inputValues, setInputValues] = useState({\n    truckType: \"\",\n    tonnage: \"\",\n  });\n\n  const getRef = useCallback(() => {\n    setRef(pickupRef.current);\n  }, [setRef]);\n\n  const _getRef = useCallback(() => {\n    _setRef(destinationRef.current);\n  }, [_setRef]);\n\n  const getTruckTypes = async () => {\n    try {\n      let res = await httpGetNoToken(\"get_truck_types\");\n      console.log(\"res>\", res);\n      setTruckTypes(res.data);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const newTonnageRange = (e) => {\n    let filtered = truck_types.filter(\n      (item) => item.type.toLowerCase() === e.target.value.toLowerCase()\n    );\n    setTonnageRange(filtered);\n    setInputValues({ ...inputValues, truckType: e.target.value });\n  };\n\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setInputValues({ ...inputValues, [name]: value });\n  // };\n\n  useEffect(() => {\n    getTruckTypes();\n    let res = httpGetNoToken(\"get_truck_types\").then((data) => {\n      setTrucks(data.data.data);\n    });\n    getRef();\n    _getRef();\n    console.log(res);\n  }, [getRef, _getRef]);\n\n  // useEffect(() => {\n  //   if (state.truck_types) {\n  //     const sizes = trucks.cargo_tonnes.find(\n  //       (truck_types) =>\n  //         truck_types.name.toLowerCase() === state.truck_types.toLowerCase()\n  //     ).size;\n  //     setSizes(sizes);\n  //   }\n  // }, [state.truck_types, trucks.assetClasses]);\n\n  return (\n    <div className=\"grid trade-box price-box\">\n      <form className=\"trade-box__form price-form\" onSubmit={onSubmit}>\n        {/* <label htmlFor=\"type\" className=\"grey\">\n          <FormattedMessage id=\"app.country\" defaultMessage=\"Country\" />\n          <input\n            ref={pickupRef}\n            type=\"text\"\n            placeholder=\"\"\n            name=\"sourceAddress\"\n            onKeyPress={(e) => {\n              e.key === \"Enter\" && e.preventDefault();\n            }}\n            onChange={handlePlaceSelect}\n            className=\"resizedTextbox\"\n            required\n          />\n        </label> */}\n        <label htmlFor=\"type\" className=\"grey\">\n          <FormattedMessage id=\"app.pickup\" defaultMessage=\"Pickup address\" />\n          <input\n            ref={pickupRef}\n            type=\"text\"\n            placeholder=\"\"\n            name=\"sourceAddress\"\n            onKeyPress={(e) => {\n              e.key === \"Enter\" && e.preventDefault();\n            }}\n            onChange={handlePlaceSelect}\n            className=\"resizedTextbox\"\n            required\n          />\n        </label>\n\n        <label htmlFor=\"model\" className=\"grey\">\n          <FormattedMessage\n            id=\"app.destination\"\n            defaultMessage=\"Destination address\"\n          />\n          <input\n            ref={destinationRef}\n            type=\"text\"\n            placeholder=\"\"\n            name=\"destinationAdress\"\n            onChange={_handlePlaceSelect}\n            className=\"resizedTextbox\"\n            required\n          />\n        </label>\n\n        <div className=\"grid-input\">\n          <label htmlFor=\"model\" className=\"grey\">\n            <FormattedMessage id=\"app.truck-type\" defaultMessage=\"Truck type\" />\n            <select\n              name=\"truckType\"\n              className=\"select-box black\"\n              required\n              // onChange={handleChange}\n              onChange={(value) => newTonnageRange(value)}\n              value={inputValues.truckType}\n              // value={state.truck_types}\n            >\n              <option value=\"\"></option>\n              {[...new Set(truck_types.map((item) => item.type))].map(\n                (item, index) => (\n                  <option value={item} key={index}>\n                    {/* console.log(item) */}\n                    {item}\n                  </option>\n                )\n              )}\n            </select>\n          </label>\n\n          <label htmlFor=\"model\" className=\"grey\">\n            <FormattedMessage id=\"app.cargo\" defaultMessage=\"Tonnage\" />\n            <select\n              name=\"tonnage\"\n              className=\"select-box black\"\n              required\n              value={input_values.tonnage}\n              onChange={handleChange}\n              // onChange={setChange}\n              // value={state.tonnage}\n            >\n              <option value=\"\"></option>\n              {tonnageRange.map((item, index) => (\n                <option value={item.id} key={index}>\n                  {/* console.log(item) */}\n                  {/* {item.cargo_tonnes} */}\n                  {item.cargo_tonnes}\n                </option>\n              ))}\n              {/* {sizes.length > 0\n                ? sizes.map(({ size }, index) => (\n                    <option key={index} value={size}>\n                      {size}\n                    </option>\n                  ))\n                : \"\"} */}\n            </select>\n          </label>\n        </div>\n\n        <div className=\"button-pricing margin-1\">\n          <button className=\"pricing-button capitalize\">\n            {loading ? (\n              <Loader />\n            ) : (\n              <FormattedMessage id=\"app.submit\" defaultMessage=\"Submit\" />\n            )}\n          </button>\n        </div>\n      </form>\n      {children}\n    </div>\n  );\n};\n\nexport default Autocomplete;\n","C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\index.js",[],"C:\\Users\\GTSTRIDE\\Downloads\\Kunle\\uzi-logistics\\src\\components\\Terms-Conditions\\Privacy.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":21,"column":10,"nodeType":"45","messageId":"46","endLine":21,"endColumn":16},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'trucks' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]